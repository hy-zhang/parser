@article{Adams1991,
author = {Adams, S.R.},
journal = {Language},
mendeley-groups = {ExtensibleParser/ExtensibleSyntax},
number = {March},
title = {{Modular grammars for programming language prototyping}},
url = {http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.48.3355{\&}rep=rep1{\&}type=pdf},
year = {1991}
}

@phdthesis(
CookThesis,author="W.R. Cook",
	title="A Denotational Semantics of Inheritance",
	School="Brown University",
	Year="1989")


@inproceedings{Kastner11road,
 author = {K\"{a}stner, Christian and Apel, Sven and Ostermann, Klaus},
 title = {The Road to Feature Modularity?},
 booktitle = {SPLC'11},
 year = {2011}
}


@Misc{McIlroy68,
  author = 	 {M.D. McIlroy},
  title = 	 {Mass Produced Software Components},
  howpublished = {Report on a Conference of the {\textsc{Nato}} Science Committee},
  editor = 	 {P. Naur and B. Randell},
  pages = 	 {135--150},
  year = 	 {1968}
}

@article{antlr1995,
 author = {Parr, T. J. and Quong, R. W.},
 title = {ANTLR: A predicated-LL(K) Parser Generator},
 journal = {Softw. Pract. Exper.},
 issue_date = {July 1995},
 volume = {25},
 number = {7},
 month = jul,
 year = {1995},
 issn = {0038-0644},
 pages = {789--810},
 numpages = {22},
 url = {http://dx.doi.org/10.1002/spe.4380250705},
 doi = {10.1002/spe.4380250705},
 acmid = {213603},
 publisher = {John Wiley \& Sons, Inc.},
 address = {New York, NY, USA},
 keywords = {LL(k) parser, compiler, parser generator, parsing, predicates},
}

@inproceedings{Grimm2006,
 author = {Grimm, Robert},
 title = {Better Extensibility Through Modular Syntax},
 booktitle = {PLDI'06},
 year = {2006}
}

@inproceedings{Warth2016,
  title={Modular semantic actions},
  author={Warth, Alessandro and Dubroy, Patrick and Garnock-Jones, Tony},
  booktitle={Symposium on Dynamic Languages},
  year={2016}
}

@inproceedings{Oliveira:2012,
 author = {Oliveira, Bruno C. d. S. and Cook, William R.},
 title = {Extensibility for the Masses: Practical Extensibility with Object Algebras},
 booktitle = {ECOOP'12},
 year = {2012}
}

@inproceedings{Gouseti2014,
 author = {Gouseti, Maria and Peters, Chiel and Storm, Tijs van der},
 title = {Extensible Language Implementation with Object Algebras (Short Paper)},
 booktitle = {GPCE'14},
 year = {2014}
}

@inproceedings{Tobin-Hochstadt2011,
 author = {Tobin-Hochstadt, Sam and St-Amour, Vincent and Culpepper, Ryan and Flatt, Matthew and Felleisen, Matthias},
 title = {Languages As Libraries},
 booktitle = {PLDI'11},
 year = {2011}
}

@inproceedings{Erdweg2011,
 author = {Erdweg, Sebastian and Rendel, Tillmann and K\"{a}stner, Christian and Ostermann, Klaus},
 title = {SugarJ: Library-based Syntactic Language Extensibility},
 booktitle = {OOPSLA'11},
 year = {2011}
}

@article{Heering1989,
 title={The syntax definition formalism SDF},
 author={Heering, Jan and Hendriks, Paul Robert Hendrik and Klint, Paul and Rekers, Jan},
 journal={ACM Sigplan Notices},
 volume={24},
 number={11},
 pages={43--75},
 year={1989},
 publisher={ACM}
}

@inproceedings{Visser2001,
  title={Stratego: A language for program transformation based on rewriting strategies},
  author={Visser, Eelco},
  booktitle={International Conference on Rewriting Techniques and Applications},
  year={2001}
}

@inproceedings{Ekman2007,
 author = {Ekman, Torbj\"{o}rn and Hedin, G\"{o}rel},
 title = {The Jastadd Extensible Java Compiler},
 booktitle = {OOPSLA'07},
 year = {2007}
}

@inproceedings{Nystrom2003,
  title={Polyglot: An extensible compiler framework for Java},
  author={Nystrom, Nathaniel and Clarkson, Michael R and Myers, Andrew C},
  booktitle={International Conference on Compiler Construction},
  year={2003}
}

@inproceedings{bravenboer2008parse,
  title={Parse table composition},
  author={Bravenboer, Martin and Visser, Eelco},
  booktitle={SLE'08},
  year={2008}
}

@techreport{burge1975,
  title={Recursive programming techniques},
  author={Burge, Burge William H William H},
  year={1975}
}

@inproceedings{Wadler1985,
  title={How to replace failure by a list of successes: a method for exception handling, backtracking, and pattern matching in lazy functional languages},
  author={Wadler, Philip},
  booktitle={Conference on Functional Programming Languages and Computer Architecture},
  year={1985}
}

@techreport{nott237,
          number = {NOTTCS-TR-96-4},
          author = {Graham Hutton and Erik Meijer},
         address = {University of Nottingham},
           title = {Monadic parser combinators},
            type = {Technical Report},
       publisher = {School of Computer Science and IT},
     institution = {University of Nottingham},
            year = {1996},
             url = {http://eprints.nottingham.ac.uk/237/},
        abstract = {In functional programming, a popular approach to building recursive descent parsers is to model parsers as functions, and to define higher-order functions (or combinators) that implement grammar constructions such as sequencing, choice, and repetition. Such parsers form an instance of a monad, an algebraic structure from mathematics that has proved useful for addressing a number of computational problems.  The purpose of this report is to provide a step-by-step tutorial on the monadic approach to building functional parsers, and to explain some of the benefits that result from exploiting monads.  No prior knowledge of parser combinators or of monads is assumed.  Indeed, this report can also be viewed as a first introduction to the use of monads in programming.}
}

@article{Leijen2001,
author = {Leijen, Daan and Meijer, Erik},
journal = {Department of Information and Computing Sciences Utrecht University Tech Rep UU-CS-2001-35},
mendeley-groups = {ExtensibleParser/ParserCombinator},
title = {{Parsec: Direct Style Monadic Parser Combinators For The Real World}},
url = {http://legacy.cs.uu.nl/daan/download/papers/parsec-paper.pdf},
year = {2001}
}

@inproceedings{Oliveira2015,
 author = {Oliveira, Bruno C. d. S. and Mu, Shin-Cheng and You, Shu-Hung},
 title = {Modular Reifiable Matching: A List-of-functors Approach to Two-level Types},
 booktitle = {Haskell '15},
 year = {2015}
}

@inproceedings{Ford2002,
 author = {Ford, Bryan},
 title = {Packrat Parsing: Simple, Powerful, Lazy, Linear Time, Functional Pearl},
 booktitle = {ICFP'02},
 year = {2002}
}

@inproceedings{Might2011,
 author = {Might, Matthew and Darais, David and Spiewak, Daniel},
 title = {Parsing with Derivatives: A Functional Pearl},
 booktitle = {ICFP'11},
 year = {2011}
}

@inproceedings{Frost2008,
  title={Parser combinators for ambiguous left-recursive grammars},
  author={Frost, Richard A and Hafiz, Rahmatullah and Callaghan, Paul},
  booktitle={PADL'08},
  year={2008}
}

@article{warth2008,
  title={Packrat parsers can support left recursion.},
  author={Warth, Alessandro and Douglass, James R and Millstein, Todd D},
  journal={PEPM},
  volume={8},
  pages={103--110},
  year={2008}
}

@article{swierstra2008data,
  title={Data types {\`a} la carte},
  author={Swierstra, Wouter},
  journal={Journal of functional programming},
  volume={18},
  number={04},
  pages={423--436},
  year={2008},
  publisher={Cambridge Univ Press}
}

@inproceedings{Bahr2011,
 author = {Bahr, Patrick and Hvitved, Tom},
 title = {Compositional Data Types},
 booktitle = {WGP'11},
 year = {2011}
}

@inproceedings{Ernst:2006,
 author = {Ernst, Erik and Ostermann, Klaus and Cook, William R.},
 title = {A Virtual Class Calculus},
 booktitle = {POPL'06},
 year = {2006}
}

@inproceedings{ernst01FP,
 author = {Ernst, Erik},
 title = {Family Polymorphism},
 booktitle = {ECOOP'01},
 year = {2001}
}

@inproceedings{Bahr2014,
 author = {Bahr, Patrick},
 title = {Composing and Decomposing Data Types: A Closed Type Families Implementation of Data Types \`{a} La Carte},
 booktitle = {WGP'14},
 year = {2014}
}

@inproceedings{Zhang2015,
 author = {Zhang, Haoyuan and Chu, Zewei and Oliveira, Bruno C. d. S. and Storm, Tijs van der},
 title = {Scrap Your Boilerplate with Object Algebras},
 booktitle = {OOPSLA'15},
 year = {2015}
}

@article{knuth1965translation,
  title={On the translation of languages from left to right},
  author={Knuth, Donald E},
  journal={Information and control},
  volume={8},
  number={6},
  pages={607--639},
  year={1965},
  publisher={Elsevier}
}

@article{lewis1968syntax,
  title={Syntax-directed transduction},
  author={Lewis II, Philip M and Stearns, Richard Edwin},
  journal={Journal of the ACM (JACM)},
  volume={15},
  number={3},
  pages={465--488},
  year={1968},
  publisher={ACM}
}

@book{pierce2002types,
  title={Types and programming languages},
  author={Pierce, Benjamin C},
  year={2002},
  publisher={MIT press}
}

@article{moors2008parser,
  title={Parser combinators in Scala},
  author={Moors, Adriaan and Piessens, Frank and Odersky, Martin},
  year={2008},
  publisher={Department of Computer Science, KU Leuven}
}

@article{wadler1998expression,
  title={The expression problem},
  author={Wadler, Philip},
  journal={Java-genericity mailing list},
  year={1998}
}

@book{gamma1995design,
  title={Design patterns: elements of reusable object-oriented software},
  author={Gamma, Erich},
  year={1995},
  publisher={Pearson Education India}
}

@inproceedings{odersky2005independently,
  title={Independently extensible solutions to the expression problem},
  author={Odersky, Martin and Zenger, Matthias},
  booktitle={FOOL'05},
  year={2005}
}

@inproceedings{wang2016expression,
  title={The expression problem, trivially!},
  author={Wang, Yanlin and Oliveira, Bruno C d S},
  booktitle={International Conference on Modularity},
  year={2016}
}

@inproceedings{torgersen2004expression,
  title={The expression problem revisited},
  author={Torgersen, Mads},
  booktitle={ECOOP'04},
  year={2004}
}

@inproceedings{oliveira2009modular,
  title={Modular visitor components},
  author={Oliveira, Bruno C. d. S.},
  booktitle={ECOOP'09},
  year={2009}
}

@techreport{odersky2004overview,
  title={An overview of the Scala programming language},
  author={Odersky, Martin and Altherr, Philippe and Cremet, Vincent and Emir, Burak and Maneth, Sebastian and Micheloud, St{\'e}phane and Mihaylov, Nikolay and Schinz, Michel and Stenman, Erik and Zenger, Matthias},
  year={2004}
}

@inproceedings{emir2007matching,
  title={Matching objects with patterns},
  author={Emir, Burak and Odersky, Martin and Williams, John},
  booktitle={ECOOP'07},
  year={2007}
}

@inproceedings{oliveira2013feature,
  title={Feature-Oriented programming with object algebras},
  author={Oliveira, Bruno C d S and Van Der Storm, Tijs and Loh, Alex and Cook, William R},
  booktitle={ECOOP'13},
  year={2013}
}

@article{Erdweg201524,
	title = "Evaluating and comparing language workbenches: Existing results and benchmarks for the future",
	journal = "Computer Languages, Systems {\&} Structures",
	volume = "44",
	number = "",
	pages = "24 - 47",
	year = "2015",
	issn = "1477-8424",
	doi = "http://dx.doi.org/10.1016/j.cl.2015.08.007",
	url = "http://www.sciencedirect.com/science/article/pii/S1477842415000573",
	author = "Sebastian Erdweg and Tijs van der Storm and Markus Völter and Laurence Tratt and Remi Bosman and William R. Cook and Albert Gerritsen and Angelo Hulshout and Steven Kelly and Alex Loh and Gabriël Konat and Pedro J. Molina and Martin Palatnik and Risto Pohjonen and Eugen Schindler and Klemens Schindler and Riccardo Solmi and Vlad Vergu and Eelco Visser and Kevin van der Vlist and Guido Wachsmuth and Jimi van der Woning",
	keywords = "Language workbenches",
	keywords = "Domain-specific languages",
	keywords = "Questionnaire language",
	keywords = "Survey",
	keywords = "Benchmarks "
}

@Article{Wagelaar2010,
	author="Wagelaar, Dennis
	and Van Der Straeten, Ragnhild
	and Deridder, Dirk",
	title="Module superimposition: a composition technique for rule-based model transformation languages",
	journal="Software {\&} Systems Modeling",
	year="2010",
	volume="9",
	number="3",
	pages="285--309",
	issn="1619-1374",
	doi="10.1007/s10270-009-0134-3",
	url="http://dx.doi.org/10.1007/s10270-009-0134-3"
}

@inproceedings{Bracha1990,
	author = {Bracha, Gilad and Cook, William},
	title = {Mixin-based Inheritance},
	booktitle = {Proceedings of the European Conference on Object-oriented Programming on Object-oriented Programming Systems, Languages, and Applications},
	series = {OOPSLA/ECOOP '90},
	year = {1990},
	isbn = {0-89791-411-2},
	location = {Ottawa, Canada},
	pages = {303--311},
	numpages = {9},
	url = {http://doi.acm.org/10.1145/97945.97982},
	doi = {10.1145/97945.97982},
	acmid = {97982},
	publisher = {ACM},
	address = {New York, NY, USA},
}

@Inbook{Scharli2003,
	author="Sch{\"a}rli, Nathanael
	and Ducasse, St{\'e}phane
	and Nierstrasz, Oscar
	and Black, Andrew P.",
	editor="Cardelli, Luca",
	title="Traits: Composable Units of Behaviour",
	bookTitle="ECOOP 2003 -- Object-Oriented Programming: 17th European Conference, Darmstadt, Germany, July 21-25, 2003. Proceedings",
	year="2003",
	publisher="Springer Berlin Heidelberg",
	address="Berlin, Heidelberg",
	pages="248--274",
	isbn="978-3-540-45070-2",
	doi="10.1007/978-3-540-45070-2_12",
	url="http://dx.doi.org/10.1007/978-3-540-45070-2_12"
}

@inproceedings{Goetz2012,
	title={Featherweight Defenders: a Formal Model for Virtual Extension Methods in Java},
	author={Brian Goetz and Robert Field and Oracle Corporation},
	year={2012},
	note="http://cr.openjdk.java.net/~briangoetz/lambda/featherweight-defenders-2011-01-31.pdf"
}

