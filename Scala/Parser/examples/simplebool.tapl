y true
\z: Bool. y z
\x: Bool. x
if false then true else false
if x then true else false
(\x: Bool -> Bool. if x false then true else false)
(\x: Bool -> Bool. if x false then true else false) (\x: Bool. if x then false else true)
(if (\ b : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . ((if false then a else a) (\ d : (Bool -> Bool) . (if c then true else b)))) then (if (if c then true else c) then (\ d : (Bool -> Bool) . a) else (b true)) else (\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (\ c : (Bool -> Bool) . true)))
(if (if (\ c : Bool . a) then (if c then true else false) else (\ e : (Bool -> Bool) . false)) then ((if false then true else b) (\ c : Bool . b)) else ((\ d : (Bool -> Bool) . false) (if (true (\ e : Bool . c)) then (false c) else (\ d : Bool . true))))
(\ c : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (if (a true) then (\ e : Bool . true) else ((if a then a else a) a)))
(((if c then c else b) (\ c : Bool . (a a))) ((\ d : Bool . true) (false (false false))))
(if (if (\ d : Bool . (\ c : Bool . b)) then (if false then c else b) else (if (\ d : (Bool -> Bool) . b) then ((if c then c else true) true) else (if b then a else (\ c : Bool . true)))) then (if (if b then false else false) then (\ a : (Bool -> Bool) . c) else (\ a : Bool . c)) else (\ c : (Bool -> Bool) . (if b then true else true)))
(\ e : ((Bool -> Bool) -> (Bool -> (Bool -> Bool))) . ((if true then a else true) (if (false c) then true else false)))
(if ((\ a : (Bool -> Bool) . (if true then c else c)) (if b then b else true)) then (if (if (a c) then c else a) then (\ d : Bool . false) else (if b then (false false) else c)) else (\ d : (Bool -> (Bool -> Bool)) . (if (if c then b else true) then b else c)))
(\ b : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if (\ c : Bool . b) then (\ c : Bool . false) else (if b then b else a)))
(if (\ d : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . ((true b) (\ c : Bool . b))) then (if (\ c : (Bool -> (Bool -> Bool)) . (\ a : Bool . (if true then false else b))) then (\ c : (Bool -> Bool) . (if b then a else true)) else ((\ b : Bool . true) (\ c : (Bool -> Bool) . true))) else (\ b : ((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) . (if (false b) then (if true then false else a) else a)))
((if (if a then true else c) then (\ a : Bool . false) else (\ d : Bool . c)) (\ a : (Bool -> Bool) . (\ d : Bool . a)))
((if (if b then false else false) then (if a then c else a) else (\ c : (Bool -> Bool) . b)) (\ a : (Bool -> Bool) . (\ a : (Bool -> Bool) . ((true false) c))))
(((\ c : Bool . b) (\ e : Bool . (\ b : Bool . a))) ((\ b : Bool . true) (if (true b) then (if a then c else c) else (a a))))
(\ e : ((Bool -> Bool) -> (Bool -> Bool)) . ((if (\ c : Bool . b) then true else (if true then false else a)) (true false)))
(\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (\ b : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ b : (Bool -> Bool) . (\ c : (Bool -> Bool) . true))))
(((if false then true else false) (true (if c then a else b))) (\ c : ((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) . (if (\ a : Bool . b) then (\ d : Bool . false) else (if c then false else b))))
(if (((if false then a else false) (true a)) (true true)) then (if (if (\ a : Bool . b) then (\ d : Bool . a) else (if c then (\ a : Bool . a) else false)) then ((if b then c else false) ((if c then true else c) (\ c : Bool . b))) else ((\ b : Bool . (if false then false else b)) (false b))) else ((\ c : Bool . a) (\ e : Bool . b)))
(if (\ a : (Bool -> (Bool -> Bool)) . ((\ b : Bool . a) true)) then (if (\ c : Bool . false) then (\ d : Bool . a) else ((if false then a else false) true)) else (\ c : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . (if b then (\ e : Bool . a) else a)))
(\ d : ((Bool -> Bool) -> (Bool -> (Bool -> Bool))) . (\ e : (Bool -> Bool) . (if c then c else a)))
(((\ e : (Bool -> Bool) . (\ c : Bool . true)) (\ b : ((Bool -> Bool) -> Bool) . (if a then (\ b : Bool . false) else (if false then a else a)))) ((\ a : Bool . false) ((if b then c else false) (if a then b else c))))
(if (\ b : (Bool -> Bool) . (if b then (\ d : Bool . b) else (if a then c else b))) then (if (if (true b) then (false b) else (if c then b else a)) then (\ e : (Bool -> Bool) . (if true then b else true)) else (((\ e : Bool . false) true) (\ e : Bool . a))) else (\ d : (Bool -> Bool) . (\ b : Bool . false)))
(\ d : ((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) . (if ((if c then a else a) (if true then false else c)) then (if (b c) then (if b then (if a then b else c) else (false c)) else (c c)) else (if (if (\ a : Bool . b) then (a false) else (false b)) then (c true) else (if a then true else false))))
(\ c : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (if (\ b : Bool . true) then (\ c : Bool . (true a)) else (\ e : (Bool -> Bool) . (false b))))
(\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (((a false) (\ e : Bool . b)) (if (b true) then (if c then false else b) else (if b then (\ b : Bool . true) else true))))
(\ b : (((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if (false c) then (a c) else (\ e : Bool . false)))
(\ d : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (\ a : (Bool -> Bool) . (\ a : Bool . a)))
(\ a : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . ((\ a : (Bool -> Bool) . (if b then true else false)) (if (\ c : Bool . b) then (true a) else c)))
(if (if (\ c : Bool . true) then (\ a : (Bool -> Bool) . (if a then true else true)) else (\ e : Bool . c)) then (if ((\ d : Bool . c) (b a)) then ((\ a : Bool . a) (c c)) else (true (\ b : Bool . true))) else (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (if (\ d : Bool . b) then (\ a : Bool . a) else (b b))))
((if (b b) then (\ e : Bool . c) else (if (\ b : Bool . false) then true else (if true then c else false))) (((\ d : Bool . c) (if false then (if a then b else true) else (if c then b else b))) (\ e : (Bool -> Bool) . (if b then (c false) else true))))
(if (\ a : (Bool -> Bool) . (if false then false else b)) then (\ c : ((Bool -> Bool) -> Bool) . (\ c : (Bool -> Bool) . (b c))) else (\ a : (Bool -> Bool) . (\ d : (Bool -> Bool) . (if (if c then b else false) then (\ b : Bool . a) else (\ d : Bool . a)))))
(if (\ d : (Bool -> Bool) . (if b then (if c then b else false) else b)) then (\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (\ a : (Bool -> Bool) . (b false))) else (\ c : (Bool -> (Bool -> Bool)) . (if false then false else a)))
((if (false true) then (if (if b then (\ b : Bool . a) else a) then (\ a : Bool . a) else (false false)) else (if (\ e : Bool . c) then (if (\ d : Bool . a) then b else true) else (if false then (\ a : Bool . true) else b))) (if (\ c : Bool . a) then (true (if false then true else false)) else (\ b : (Bool -> Bool) . (if false then b else (\ d : Bool . true)))))
(if ((\ c : Bool . a) (c c)) then ((\ b : (Bool -> Bool) . (if (if a then true else a) then (\ a : Bool . false) else b)) (if (\ d : Bool . true) then (if false then c else c) else b)) else (\ a : ((Bool -> Bool) -> Bool) . (\ e : Bool . (if b then c else false))))
(\ b : ((Bool -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ b : (Bool -> (Bool -> Bool)) . ((\ b : Bool . (if false then false else a)) (true c))))
(((\ e : (Bool -> Bool) . (if a then false else a)) ((\ c : Bool . (if c then false else b)) ((if false then c else true) (if a then false else true)))) (if (\ b : Bool . false) then (if c then false else b) else (if a then c else c)))
(if (if (if false then c else false) then (false a) else (\ b : (Bool -> Bool) . (b b))) then (if (c false) then ((false c) (c c)) else ((\ e : Bool . false) false)) else ((\ a : Bool . false) (if (if b then true else false) then false else false)))
(\ e : (((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) -> (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool))) . (if (if (true a) then (\ b : Bool . true) else (\ c : (Bool -> Bool) . false)) then (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . ((b true) (\ b : Bool . a))) else (if (\ b : Bool . c) then (b a) else (\ a : Bool . a))))
(if (((c c) (if (true true) then (\ e : Bool . false) else (if false then c else false))) (if (\ e : Bool . b) then (c a) else (if a then b else (\ a : Bool . true)))) then ((\ e : Bool . (if b then a else b)) (c false)) else (\ b : (((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> Bool)) . (if b then true else (\ b : Bool . true))))
(if (if (if false then b else true) then (\ d : Bool . a) else (if (if c then false else true) then (if b then b else a) else (\ a : Bool . true))) then (if (if a then false else b) then (false (\ a : Bool . true)) else (a a)) else (\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (\ d : (Bool -> Bool) . (if a then true else c))))
(if ((c c) (a c)) then (if (if a then false else false) then (true a) else (\ d : Bool . a)) else (if (false b) then (if true then (if a then a else b) else (if true then c else c)) else (\ a : Bool . a)))
(\ e : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . (if (if a then a else c) then (\ a : Bool . false) else (if c then c else true)))
(\ d : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . (if ((if true then c else true) false) then (if false then (\ d : Bool . false) else (if false then true else b)) else (b a)))
(\ b : ((Bool -> (Bool -> Bool)) -> ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool)))) . (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (if c then (true b) else false)))
(if (\ c : (Bool -> (Bool -> Bool)) . (a c)) then (\ a : (Bool -> Bool) . (if (\ b : Bool . false) then (\ e : Bool . b) else b)) else ((\ c : Bool . a) (if (if false then true else b) then (if false then true else c) else (\ a : Bool . false))))
((\ c : (Bool -> (Bool -> Bool)) . (a b)) (\ d : (Bool -> Bool) . ((if (if a then b else a) then a else true) (\ b : (Bool -> Bool) . (if c then false else c)))))
(if (if (\ c : Bool . (\ a : Bool . true)) then (true b) else (if ((\ c : Bool . b) c) then (a false) else (b false))) then (\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (false (a c))) else (if ((true false) true) then (if c then (if b then b else a) else (if c then c else true)) else (if c then b else false)))
(if ((if true then (false a) else (if true then false else b)) (if a then a else false)) then (\ e : ((Bool -> Bool) -> Bool) . (if a then c else a)) else (\ a : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (if (\ b : Bool . (\ d : Bool . c)) then ((c false) a) else (if c then b else (true false)))))
(((\ a : Bool . false) (if a then (if c then true else c) else (\ b : Bool . b))) ((\ a : Bool . false) (if (\ a : Bool . c) then true else true)))
(\ d : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> (Bool -> Bool)) -> (Bool -> Bool))) . (if (if (\ c : Bool . true) then (\ a : (Bool -> Bool) . a) else (\ a : Bool . false)) then (if true then false else b) else (false b)))
(if (if (\ a : (Bool -> Bool) . (if c then true else c)) then (\ d : Bool . false) else (\ c : (Bool -> Bool) . c)) then ((b a) (\ a : Bool . false)) else (\ a : ((Bool -> Bool) -> Bool) . ((if true then a else b) (if true then c else false))))
(if ((\ e : Bool . a) (\ e : Bool . b)) then (if (if (\ a : Bool . a) then (\ e : Bool . c) else (\ e : Bool . b)) then ((false true) (if false then true else true)) else (if (if a then a else a) then (true c) else a)) else (((\ d : Bool . c) false) (\ e : (Bool -> Bool) . b)))
(if (if (if (if false then a else true) then true else (if a then a else a)) then (if (a true) then ((if false then true else c) (\ e : Bool . b)) else (b (true a))) else (false c)) then ((true b) (\ b : Bool . (c a))) else ((if (false true) then ((\ c : Bool . c) (\ a : Bool . a)) else (\ e : Bool . true)) (\ e : Bool . false)))
(if ((if (if false then b else a) then (\ c : Bool . c) else true) (true true)) then (\ e : ((Bool -> Bool) -> Bool) . (if true then b else b)) else (\ a : ((Bool -> Bool) -> Bool) . (\ d : Bool . (if false then a else false))))
(if ((\ b : Bool . c) (if c then a else false)) then (if (if (if c then a else b) then (false true) else (\ b : (Bool -> Bool) . (\ c : Bool . true))) then (\ a : Bool . a) else (\ e : (Bool -> Bool) . (if a then a else b))) else (if (if true then true else false) then (c true) else (a a)))
(if (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (\ c : (Bool -> Bool) . (\ c : Bool . a))) then (if (b false) then (if c then c else true) else (\ e : Bool . (\ d : Bool . b))) else (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (c (if false then false else a))))
(\ d : ((Bool -> Bool) -> (Bool -> Bool)) . ((if a then false else (\ e : Bool . true)) (\ c : (Bool -> Bool) . false)))
(\ c : (((Bool -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) -> (((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> Bool))) . ((c a) (\ e : Bool . false)))
(((if (if (\ b : Bool . a) then b else (\ a : Bool . false)) then (\ c : Bool . true) else (if a then b else a)) (if (if c then b else false) then (c b) else b)) (if (a b) then (if true then b else b) else (true a)))
((if (if a then true else true) then (b false) else (\ c : (Bool -> Bool) . (c c))) ((\ c : (Bool -> Bool) . false) ((if false then c else true) (if false then b else c))))
((if (c c) then ((if false then true else false) b) else (\ e : Bool . (true false))) ((if a then (if true then true else c) else (\ d : Bool . c)) (\ d : (Bool -> Bool) . (b true))))
(if (if (if (\ a : Bool . true) then (\ e : Bool . a) else (\ e : Bool . b)) then (if a then b else c) else (b (false false))) then (\ d : (Bool -> (Bool -> Bool)) . (c b)) else (\ d : (Bool -> (Bool -> Bool)) . (if a then (\ a : Bool . c) else b)))
(\ a : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . (if (\ b : Bool . (if c then false else false)) then (c a) else (if (\ d : Bool . c) then true else (false false))))
(\ d : ((Bool -> Bool) -> (Bool -> (Bool -> Bool))) . (\ b : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . ((if b then b else c) false)))
(\ b : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (\ b : (Bool -> Bool) . (\ a : Bool . false))))
(\ c : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . ((b a) (if a then (if a then false else c) else (a c))))
(if (\ d : (Bool -> Bool) . ((\ a : Bool . true) false)) then (\ d : (Bool -> Bool) . (if false then a else (if c then b else a))) else (if (if c then b else false) then (a c) else (if c then b else a)))
(if (if (\ c : ((Bool -> Bool) -> Bool) . (b b)) then (\ c : Bool . b) else ((a a) (false c))) then (if (a a) then (a (if true then true else a)) else (if b then a else a)) else (((false false) (\ e : Bool . true)) (\ a : (Bool -> Bool) . (if false then c else c))))
((if ((true true) (false a)) then (\ b : (Bool -> Bool) . (if a then b else c)) else (\ b : (Bool -> Bool) . (false b))) (\ d : (Bool -> Bool) . (\ c : Bool . true)))
((if (c true) then (b c) else (if (if b then a else false) then (if true then a else false) else (if a then false else false))) (if (\ c : Bool . a) then (\ e : Bool . c) else (\ b : Bool . b)))
(\ c : (((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if (if (\ a : Bool . false) then (\ a : Bool . false) else a) then (true true) else (a false)))
((if (if (if a then a else false) then (\ e : Bool . c) else false) then (b c) else (c (\ e : Bool . c))) ((\ c : Bool . b) (\ b : Bool . false)))
(\ b : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . ((if (if c then true else a) then true else true) (if c then a else b)))
(\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (if (c b) then (false true) else (if false then b else false))))
((if (\ a : Bool . b) then (if (\ a : Bool . false) then (if c then b else true) else false) else (\ b : Bool . c)) (\ d : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (\ b : Bool . (\ e : Bool . a))))
(if (if (if true then c else true) then (false a) else (if (if b then true else false) then (true b) else a)) then ((if a then c else (\ c : Bool . b)) (if b then true else false)) else (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . ((\ b : Bool . false) b)))
(\ d : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . ((if b then true else b) ((\ c : Bool . false) (false true))))
(if (\ d : (Bool -> Bool) . (if b then c else a)) then (\ d : (Bool -> (Bool -> Bool)) . (a (if b then a else true))) else (\ d : (Bool -> Bool) . (if b then a else true)))
(((if false then a else c) ((\ b : Bool . a) c)) (\ b : (Bool -> (Bool -> Bool)) . (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (b c))))
((if (false b) then ((if false then a else b) c) else (if (b a) then a else true)) ((if (\ b : Bool . b) then (c b) else b) ((\ c : Bool . false) (if a then (false false) else c))))
(if ((if (\ c : Bool . (\ b : Bool . a)) then (\ b : Bool . (if true then b else c)) else (a b)) (if a then (true false) else (if a then true else a))) then ((\ d : Bool . (if c then a else true)) (if (if c then a else a) then c else b)) else (if (if false then a else (a false)) then (false (if true then false else true)) else (if true then false else a)))
(\ d : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . (\ a : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . (\ e : Bool . (b false))))
(if (((b b) (\ b : Bool . a)) ((if a then false else c) (\ a : Bool . a))) then ((if true then (\ e : Bool . b) else b) (\ e : (Bool -> (Bool -> Bool)) . (if (a b) then (true false) else (if a then false else false)))) else (if ((if true then a else true) false) then (if (\ e : Bool . true) then true else true) else (if (true true) then true else true)))
(((\ c : Bool . true) (c b)) (if (\ b : Bool . true) then (\ c : (Bool -> Bool) . (if b then b else c)) else (if (if c then true else true) then (\ c : Bool . true) else (if true then false else a))))
(((\ a : (Bool -> Bool) . (if true then c else false)) ((if true then true else true) (c a))) (if (if a then b else false) then (if (if b then false else c) then (false true) else (a b)) else (((\ b : Bool . a) b) (if a then c else (\ d : Bool . a)))))
(if ((\ e : (Bool -> Bool) . c) (if ((false a) (c false)) then (a a) else (if true then c else a))) then ((if (\ d : Bool . (false false)) then (if (c false) then c else (\ c : Bool . b)) else (c c)) ((if c then false else false) (\ a : Bool . c))) else ((if (if a then a else b) then (\ c : Bool . c) else (if false then b else false)) (b true)))
((((\ e : Bool . false) (\ d : Bool . c)) (\ a : (Bool -> Bool) . (false b))) ((\ c : (Bool -> Bool) . (\ b : Bool . true)) (b c)))
(\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (\ e : ((Bool -> Bool) -> (Bool -> (Bool -> Bool))) . (\ c : (Bool -> Bool) . (\ d : (Bool -> Bool) . (b a)))))
(\ e : (((Bool -> Bool) -> Bool) -> (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool))) . (if ((\ d : Bool . c) (true a)) then (if (\ d : (Bool -> Bool) . (if false then true else true)) then (if b then (\ a : Bool . b) else (if false then false else true)) else (if c then c else false)) else (\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (\ d : Bool . a))))
(if (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (\ d : (Bool -> Bool) . (if false then a else a))) then (if ((if false then false else b) (true c)) then (if (if false then a else (if b then c else c)) then (\ b : Bool . b) else (if c then true else false)) else ((\ b : Bool . (if a then c else true)) (false c))) else (\ b : (Bool -> (Bool -> Bool)) . ((\ b : (Bool -> Bool) . (c c)) (\ e : Bool . a))))
(\ b : ((Bool -> Bool) -> (Bool -> Bool)) . ((\ e : Bool . a) (true a)))
((\ c : ((Bool -> Bool) -> Bool) . (true c)) (\ a : (Bool -> Bool) . (if (\ e : Bool . true) then (if false then b else true) else (if c then false else false))))
((if ((\ e : Bool . a) (\ a : Bool . c)) then (\ a : Bool . c) else (c false)) ((\ a : (Bool -> Bool) . (c true)) (\ c : (Bool -> Bool) . b)))
(\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (\ d : (Bool -> Bool) . (a c)))
(((false (\ a : Bool . false)) ((c (\ a : Bool . b)) (if (\ a : Bool . false) then (false false) else b))) (\ c : ((Bool -> Bool) -> Bool) . (b (b a))))
(\ c : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> (Bool -> Bool))) . ((if false then (b false) else true) (false (\ c : Bool . false))))
(\ c : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . (if (b false) then (\ a : (Bool -> Bool) . true) else ((if c then b else false) false)))
((((\ e : Bool . a) (false false)) (if (if a then b else false) then c else (a c))) (\ d : (Bool -> Bool) . ((if b then (false c) else c) (if a then c else c))))
(if (((b false) (\ c : Bool . c)) (true a)) then (\ d : (Bool -> Bool) . (if c then false else b)) else ((if (a false) then (false a) else (if b then false else false)) (if false then (\ d : Bool . b) else a)))
((\ c : (Bool -> Bool) . (if c then a else true)) ((\ e : Bool . false) (\ e : Bool . (if b then true else true))))
(\ c : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ b : (Bool -> Bool) . (\ e : Bool . (\ b : Bool . false))))
((if (\ e : Bool . false) then ((\ a : Bool . true) true) else (\ e : (Bool -> Bool) . true)) ((if (c false) then (true a) else (\ e : Bool . b)) ((\ d : (Bool -> Bool) . (\ c : Bool . false)) (\ e : Bool . (\ b : Bool . b)))))
((if (if true then a else false) then (\ e : (Bool -> Bool) . (a a)) else (true false)) ((\ e : ((Bool -> Bool) -> Bool) . (true false)) (((if c then false else a) (b c)) (if a then c else false))))
((if (a c) then (b false) else (if a then true else c)) ((if true then a else c) (if false then true else a)))
(if (\ d : (Bool -> Bool) . ((\ e : Bool . false) c)) then (\ b : (Bool -> Bool) . (c a)) else ((\ b : Bool . (if false then a else true)) (\ b : Bool . c)))
(\ b : (((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> Bool)) . (if (if false then false else true) then (a false) else (if false then a else (c c))))
((if (\ d : Bool . (\ b : Bool . a)) then ((true c) (\ b : Bool . a)) else (if false then c else b)) (if ((if true then b else a) (a true)) then ((b c) ((if true then b else a) (if c then false else false))) else ((if b then true else a) (c b))))
((if (if b then a else a) then ((false c) (a b)) else (if true then b else c)) (\ c : (Bool -> Bool) . (c (if c then true else false))))
((if (if (if b then b else b) then (if true then false else b) else (b c)) then (if false then (if c then a else a) else b) else (\ e : Bool . false)) (((\ e : Bool . b) (\ c : Bool . false)) (if b then c else b)))
((if (if (\ a : Bool . a) then (b false) else (\ c : Bool . true)) then ((a true) (b false)) else (((true b) false) (if b then false else false))) (if (if false then c else true) then (if (if a then (if false then b else true) else c) then (b c) else (if b then a else false)) else (if (if b then true else a) then (if false then true else b) else (\ a : Bool . false))))
(if (\ c : (Bool -> Bool) . (if (if b then (\ d : Bool . b) else true) then (\ c : Bool . b) else (if false then a else c))) then (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (\ c : (Bool -> Bool) . (\ a : (Bool -> Bool) . b))) else (\ c : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . ((if b then true else c) (c a))))
(\ b : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . ((b c) (true true)))
(\ e : (((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) -> (Bool -> (Bool -> Bool))) . (if (false b) then (b true) else (\ b : (Bool -> Bool) . (if false then a else true))))
((if ((\ e : Bool . false) (if true then b else false)) then (\ d : (Bool -> Bool) . false) else (if (if false then false else a) then c else b)) (\ d : ((Bool -> Bool) -> (Bool -> (Bool -> Bool))) . ((b (\ a : Bool . c)) (if false then b else false))))
((if (\ e : Bool . c) then (if false then c else a) else (a true)) (if (\ d : (Bool -> Bool) . (if true then a else c)) then (\ b : Bool . false) else (if (\ d : Bool . a) then c else (a c))))
(if (if (if false then false else c) then (true (if false then c else c)) else ((a c) b)) then (\ e : ((Bool -> Bool) -> (Bool -> Bool)) . ((\ a : (Bool -> Bool) . (true false)) (c a))) else (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . ((\ e : Bool . true) (b a))))
(if (if ((\ b : Bool . c) false) then (c a) else (if (\ b : Bool . c) then c else a)) then (\ c : ((Bool -> Bool) -> Bool) . (a (a b))) else (\ d : (Bool -> Bool) . (if true then true else c)))
((if (\ a : (Bool -> Bool) . (if a then b else b)) then ((\ c : Bool . true) true) else (\ a : Bool . b)) (if (a (\ a : Bool . false)) then (true false) else (if (if false then false else a) then (if b then c else a) else b)))
((\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (if (if a then true else false) then false else b)) (\ d : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ e : Bool . (true c))))
(((\ d : Bool . a) (if (a c) then (\ b : Bool . true) else (a c))) ((\ a : Bool . true) (a (\ d : Bool . a))))
(((\ b : (Bool -> Bool) . (\ a : Bool . (\ c : Bool . false))) ((true true) true)) (if (if (\ a : Bool . c) then (\ e : Bool . c) else b) then (\ e : Bool . (\ e : Bool . b)) else (\ c : Bool . b)))
(\ b : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> (Bool -> Bool))) . ((if (if c then b else a) then (true false) else (\ b : (Bool -> Bool) . (if a then c else true))) (\ e : (Bool -> (Bool -> Bool)) . ((\ c : Bool . a) (\ e : Bool . b)))))
(\ c : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> (Bool -> Bool))) . (\ c : (Bool -> (Bool -> Bool)) . (\ e : (Bool -> Bool) . (if c then c else false))))
(\ b : ((Bool -> Bool) -> ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool)))) . (\ d : (Bool -> Bool) . (if a then b else true)))
(((\ b : Bool . b) (\ d : Bool . (false c))) (if (\ c : Bool . a) then (\ e : (Bool -> Bool) . true) else (\ e : Bool . a)))
(if ((if (b c) then (\ d : Bool . true) else false) (b c)) then ((\ e : (Bool -> Bool) . (if true then true else b)) ((if a then true else false) (c c))) else ((\ a : Bool . (if true then a else a)) (\ a : Bool . a)))
((\ d : (Bool -> (Bool -> Bool)) . (if (\ c : Bool . false) then (\ b : (Bool -> Bool) . b) else (false a))) (\ c : (Bool -> Bool) . (if false then false else true)))
(if (if (if false then true else false) then (if c then c else true) else ((false false) false)) then (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . ((if true then false else true) false))) else (if ((c a) (true c)) then (\ c : (Bool -> Bool) . (if true then b else true)) else (if false then c else true)))
(((if (\ a : (Bool -> Bool) . false) then (false a) else ((a c) b)) (if (true true) then false else (\ e : Bool . b))) (\ e : (Bool -> Bool) . (if b then true else c)))
((\ a : (Bool -> Bool) . (\ e : Bool . (a true))) (if (c true) then (c false) else (if a then b else c)))
(((true b) (if true then true else (\ d : Bool . false))) (if (if (\ c : Bool . b) then (\ b : Bool . true) else (\ c : Bool . b)) then (a (\ a : Bool . b)) else (if (\ e : Bool . true) then (\ d : (Bool -> Bool) . true) else (\ b : (Bool -> Bool) . false))))
((\ a : (Bool -> Bool) . (false (\ c : Bool . false))) (if (\ a : (Bool -> Bool) . (\ e : (Bool -> Bool) . c)) then (a (\ b : Bool . b)) else (if (\ e : Bool . a) then (if (if c then a else a) then (if true then false else false) else true) else (if (if c then a else a) then (true c) else (\ b : Bool . false)))))
(if (if (if true then (if c then c else b) else (true a)) then ((if true then b else c) true) else (if false then b else true)) then ((if a then (\ a : Bool . true) else (\ e : Bool . a)) (true c)) else (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (\ b : Bool . (if false then c else a))))
(if (((\ c : (Bool -> Bool) . false) (if b then b else false)) (\ e : (Bool -> Bool) . (\ b : Bool . c))) then (if (\ e : Bool . (\ d : Bool . b)) then (true false) else (false (if false then b else a))) else (\ e : (Bool -> (Bool -> Bool)) . (\ d : (Bool -> Bool) . (\ c : Bool . c))))
((if ((\ c : Bool . false) c) then (\ c : Bool . (if b then b else false)) else (if (b true) then (\ c : Bool . false) else (\ b : Bool . true))) ((c false) (if false then false else true)))
(if (if ((\ e : Bool . true) a) then (\ d : (Bool -> Bool) . c) else (\ c : Bool . false)) then ((false (\ c : Bool . a)) (if (c false) then (\ a : Bool . a) else false)) else (\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if (c false) then (if (if c then c else a) then (a true) else false) else (c b))))
(if ((true false) (a false)) then (\ e : (Bool -> Bool) . (\ a : (Bool -> Bool) . b)) else ((if ((\ b : Bool . c) (if a then c else true)) then (a true) else (if a then true else true)) (if (if c then c else b) then ((\ e : Bool . true) (false c)) else (\ d : (Bool -> Bool) . false))))
(if (\ d : ((Bool -> Bool) -> Bool) . (\ e : (Bool -> Bool) . (if b then (c b) else a))) then (\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ c : (Bool -> Bool) . c)) else ((if (\ c : Bool . true) then (\ c : Bool . true) else (\ c : Bool . false)) (b (a c))))
(((if (\ d : Bool . false) then (\ c : Bool . b) else c) (\ c : Bool . a)) (\ e : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ e : (Bool -> Bool) . (if true then true else false))))
((\ a : (Bool -> Bool) . (\ d : (Bool -> Bool) . (\ d : Bool . true))) (if (if (\ d : (Bool -> Bool) . a) then (\ e : Bool . b) else (a a)) then (a (\ e : Bool . c)) else (\ c : ((Bool -> Bool) -> Bool) . (\ a : Bool . false))))
((\ c : (((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> Bool)) . ((if b then (\ b : Bool . b) else (\ e : Bool . true)) ((c false) (\ b : Bool . a)))) ((\ b : Bool . true) (\ c : (Bool -> Bool) . (\ b : Bool . (if false then c else a)))))
(\ c : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (\ a : (Bool -> Bool) . (if false then b else (\ e : Bool . false)))))
(\ c : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . ((if b then false else c) (false false)))
(((\ d : Bool . (\ e : Bool . false)) ((\ d : Bool . a) (false true))) (((if true then a else false) (if a then false else false)) (if b then (if false then false else c) else (c a))))
(\ d : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (if (if (\ a : Bool . c) then (if c then true else a) else (false b)) then (b c) else (true c)))
(\ d : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> (Bool -> Bool))) . (\ a : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . (if (false true) then (false a) else (b a))))
((\ a : (Bool -> Bool) . (if true then (\ e : Bool . true) else b)) (\ a : (Bool -> (Bool -> Bool)) . (if a then (\ c : Bool . true) else (true false))))
(if (((\ d : Bool . true) (c c)) (\ c : Bool . (\ c : Bool . a))) then ((\ e : ((Bool -> Bool) -> Bool) . (true true)) (if (true c) then (\ b : Bool . c) else (if false then false else true))) else ((b (if true then a else true)) (c c)))
(\ e : ((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) . (((\ c : Bool . false) ((a b) (a c))) (if (\ c : Bool . a) then (if b then (c false) else (\ d : Bool . a)) else (if a then false else false))))
(if (if ((if a then a else b) a) then ((false c) ((\ c : Bool . c) (if false then a else false))) else (if c then b else true)) then (if (if (if true then false else true) then (if false then false else a) else (a true)) then (if b then (if c then true else false) else (if c then false else false)) else ((false false) (\ c : Bool . b))) else (if (if (b c) then true else (\ d : Bool . b)) then (\ d : (Bool -> Bool) . (a a)) else (if (\ e : (Bool -> Bool) . (if false then c else true)) then (if (false c) then b else (\ b : Bool . true)) else (a b))))
(if ((if a then false else a) ((\ e : Bool . a) false)) then ((true true) (\ b : Bool . b)) else (if (true c) then (if false then c else b) else ((c a) (\ e : Bool . false))))
(\ a : (((Bool -> (Bool -> Bool)) -> (Bool -> (Bool -> Bool))) -> (Bool -> (Bool -> Bool))) . (\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (if ((\ c : Bool . false) (if b then false else false)) then (if true then b else a) else (\ d : Bool . true))))
(if (\ e : (Bool -> Bool) . (\ b : Bool . true)) then (((if b then true else false) a) (true false)) else (\ e : (Bool -> Bool) . (b false)))
(\ b : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if ((true b) (c a)) then ((if c then false else b) a) else ((\ b : Bool . false) (a (\ e : Bool . b)))))
(((\ b : (Bool -> Bool) . (true c)) (\ c : (Bool -> Bool) . (if true then false else a))) ((\ d : Bool . b) (if false then (a c) else b)))
(if (if (if c then (\ a : Bool . b) else (\ d : Bool . c)) then (\ c : Bool . (\ c : Bool . false)) else (\ e : Bool . false)) then ((c c) (\ a : Bool . a)) else (\ e : (Bool -> Bool) . (if a then c else true)))
((\ c : (Bool -> Bool) . ((true c) (if c then a else a))) ((\ a : (Bool -> Bool) . ((false b) (\ d : Bool . a))) (\ a : (Bool -> Bool) . (if (if b then b else c) then false else (c true)))))
(if (\ c : (Bool -> (Bool -> Bool)) . (if c then b else false)) then (((\ a : Bool . a) (b a)) (\ e : Bool . false)) else (\ c : (Bool -> Bool) . (if b then true else a)))
(\ a : (((Bool -> Bool) -> (Bool -> Bool)) -> (((Bool -> Bool) -> Bool) -> (Bool -> Bool))) . (\ b : (Bool -> (Bool -> Bool)) . (\ b : (Bool -> Bool) . (if c then b else a))))
((if (if (if c then a else b) then (if b then true else b) else (true false)) then ((if a then true else true) ((\ c : Bool . false) true)) else ((if a then c else b) (if a then c else c))) (\ c : (Bool -> Bool) . (if b then false else true)))
(if ((\ a : (Bool -> Bool) . (\ a : Bool . true)) (if (false c) then (if true then a else true) else false)) then ((\ c : Bool . c) ((\ b : Bool . false) (if c then false else a))) else (\ d : (Bool -> Bool) . (\ c : Bool . a)))
(if (\ a : (Bool -> Bool) . (\ b : Bool . a)) then (\ e : (Bool -> Bool) . (true c)) else (\ e : (Bool -> Bool) . (if a then b else c)))
(\ c : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if ((\ e : Bool . true) (if a then a else b)) then (\ a : Bool . c) else (\ d : ((Bool -> Bool) -> Bool) . (\ c : Bool . a))))
(((if (if true then b else c) then (if (if b then a else true) then true else (a false)) else (if a then a else false)) ((if a then true else c) (if b then (false false) else (false false)))) (\ b : (Bool -> (Bool -> Bool)) . (true false)))
((\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (\ e : Bool . b)) (if (\ e : (Bool -> Bool) . c) then ((\ a : Bool . a) (if (if c then true else c) then a else (\ c : Bool . true))) else (\ a : (Bool -> Bool) . (a true))))
(\ d : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . ((if a then (if a then true else c) else (if c then a else false)) (a (\ c : Bool . true))))
(\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . ((if b then b else (true false)) (if (if true then c else false) then true else c)))
(\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (((if false then c else b) b) (if (if false then a else c) then (if c then c else false) else false)))
((if (if false then c else false) then (if a then true else a) else (b false)) (\ d : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . (if (if b then c else true) then a else (if false then a else c))))
(if (if (\ e : Bool . (if a then true else b)) then ((\ a : Bool . a) b) else ((true b) (if true then b else a))) then ((\ b : Bool . (true c)) (\ c : (Bool -> Bool) . (\ e : Bool . c))) else (if (b c) then ((\ c : Bool . a) true) else (if false then a else true)))
((if (if (\ b : Bool . a) then true else a) then (if (true false) then (\ b : Bool . (b c)) else (\ b : (Bool -> Bool) . (false a))) else (if (\ c : Bool . b) then c else (b c))) (if (\ d : Bool . a) then (if true then false else true) else (if false then false else a)))
((\ b : (Bool -> Bool) . (if (\ e : Bool . c) then (\ d : Bool . c) else (if b then a else true))) (if (if (if false then (if a then true else a) else (b true)) then (\ e : Bool . (\ c : Bool . c)) else ((\ c : Bool . b) (if c then c else c))) then ((\ b : Bool . true) (if true then b else false)) else (\ d : (Bool -> Bool) . (\ d : Bool . a))))
(if (if (\ b : (Bool -> Bool) . (\ b : Bool . a)) then (if b then (\ b : Bool . true) else (\ c : Bool . c)) else (if (true a) then (\ d : Bool . false) else c)) then (\ d : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . (((\ d : Bool . b) true) ((a c) (\ e : Bool . true)))) else ((\ b : Bool . true) (if a then a else false)))
(\ c : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . (if (b c) then (((if true then c else false) (if c then c else false)) (if (\ c : Bool . b) then (\ b : Bool . a) else (\ a : Bool . c))) else (a true)))
((if (\ b : (Bool -> Bool) . (if true then c else c)) then (\ b : (Bool -> Bool) . ((\ b : Bool . b) (if c then b else a))) else (if (a b) then (if false then b else true) else (c false))) (\ b : (Bool -> Bool) . (c c)))
(\ b : ((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) . (\ c : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . (if (\ c : Bool . c) then true else (\ d : Bool . false))))
(((if (\ b : Bool . a) then false else (\ b : Bool . a)) (if a then false else c)) ((\ d : (Bool -> Bool) . (\ d : (Bool -> Bool) . (\ b : Bool . c))) ((if (if true then false else b) then false else (\ a : Bool . false)) (if b then b else true))))
(if (if (\ d : Bool . (\ a : Bool . c)) then (\ c : Bool . c) else ((\ a : Bool . (a a)) (b true))) then (if (if (if b then true else c) then false else (\ b : Bool . b)) then ((\ c : Bool . b) (false c)) else (\ d : ((Bool -> Bool) -> Bool) . (if false then true else (if a then false else b)))) else (if (c b) then (\ e : Bool . c) else (false b)))
(((if false then (if c then false else b) else a) (\ c : (Bool -> Bool) . (\ e : Bool . a))) (if (\ e : (Bool -> Bool) . false) then (\ b : Bool . true) else (\ b : Bool . (if b then true else a))))
(if ((false (if true then a else false)) (if b then true else b)) then (\ e : ((Bool -> Bool) -> (Bool -> (Bool -> Bool))) . (if true then (true c) else b)) else (\ e : (Bool -> (Bool -> Bool)) . (if (\ e : Bool . true) then (if false then (\ e : Bool . true) else (if c then false else b)) else (\ a : Bool . c))))
(if (\ a : (Bool -> Bool) . (if false then c else b)) then (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (\ e : Bool . false))) else (if ((if false then a else false) a) then (\ e : (Bool -> Bool) . b) else (b a)))
(if ((if false then (false b) else (b b)) (if b then false else b)) then (\ e : (Bool -> Bool) . ((c true) (b true))) else (if (if (if true then b else b) then (if a then c else c) else b) then (if c then true else (\ d : Bool . b)) else (\ c : (Bool -> Bool) . (false c))))
(\ e : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . (if (c a) then (if (if c then false else c) then (true false) else (if b then a else a)) else ((if true then a else b) (\ c : Bool . c))))
((if (if (if false then false else c) then (\ d : Bool . (\ e : Bool . true)) else (\ b : Bool . a)) then (if (c b) then ((if false then c else true) (c c)) else (\ c : Bool . false)) else ((if false then a else (true true)) (\ c : Bool . c))) ((false a) (true a)))
(\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (\ c : (Bool -> Bool) . (if c then false else b)))
(\ a : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (\ d : (Bool -> Bool) . (b c))))
(if ((false b) (\ c : Bool . b)) then ((if false then c else (if c then b else false)) (if true then (b true) else (a b))) else ((b (\ e : Bool . b)) (\ c : (Bool -> Bool) . (a false))))
(\ b : ((Bool -> Bool) -> ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool)))) . (\ d : (Bool -> Bool) . (if b then true else true)))
((\ a : (Bool -> (Bool -> Bool)) . ((a (true true)) (if (\ b : Bool . true) then (\ a : Bool . c) else true))) (\ c : ((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) . (if (a false) then true else (if false then c else c))))
((if (\ d : Bool . false) then (\ d : Bool . b) else ((\ b : Bool . c) (true c))) (if ((false (if b then a else a)) (if (\ d : Bool . true) then a else (true true))) then (\ a : (Bool -> Bool) . (if (if a then a else false) then (\ e : Bool . a) else c)) else (true b)))
(if ((\ c : (Bool -> Bool) . (\ a : Bool . b)) (if (\ a : Bool . false) then (if true then b else true) else (if (if a then true else c) then true else false))) then ((if (\ a : Bool . c) then false else (a b)) (if ((\ c : Bool . false) false) then ((b b) (\ b : Bool . true)) else (false a))) else (\ e : (Bool -> Bool) . (if a then false else b)))
((if (\ b : (Bool -> Bool) . b) then (\ a : Bool . b) else (\ d : Bool . a)) (if (\ a : (Bool -> Bool) . true) then (if (if c then a else a) then b else false) else (\ a : Bool . b)))
(if (if ((\ c : Bool . true) b) then (\ a : Bool . true) else (if false then false else b)) then (\ d : ((Bool -> Bool) -> Bool) . (if (\ a : (Bool -> Bool) . a) then ((if a then a else a) a) else (if true then c else true))) else (if (if true then b else true) then (true a) else ((\ d : Bool . false) (if b then a else false))))
(((\ e : Bool . b) (if ((if false then false else false) true) then (\ c : Bool . a) else (\ b : Bool . a))) ((\ b : Bool . (a true)) ((a c) false)))
(if ((c (\ e : Bool . true)) (a true)) then (\ b : ((Bool -> Bool) -> Bool) . (\ a : Bool . (if a then b else true))) else (if (if (true a) then (\ e : Bool . a) else (if c then b else (true true))) then (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (c b)) else (\ b : Bool . (b false))))
(if ((\ c : Bool . c) (\ b : Bool . a)) then (\ d : (Bool -> Bool) . (if b then b else false)) else (if (\ c : Bool . true) then (\ e : Bool . a) else (\ a : Bool . false)))
(if ((false c) (\ b : Bool . c)) then (if (\ a : (Bool -> Bool) . (\ a : (Bool -> Bool) . c)) then (if (false c) then (\ b : Bool . true) else b) else ((if a then (\ a : Bool . b) else true) (a true))) else (\ d : (Bool -> Bool) . (\ b : (Bool -> Bool) . (c b))))
(if ((true true) (if b then a else false)) then (((a false) (\ d : (Bool -> Bool) . (if false then true else true))) (if (if (if a then false else b) then false else c) then (if (if b then true else a) then false else false) else (a (true c)))) else (if (if (\ d : Bool . c) then (b true) else (\ b : Bool . c)) then (\ c : ((Bool -> Bool) -> Bool) . (\ d : Bool . b)) else ((\ e : Bool . true) ((b c) (\ a : Bool . a)))))
(((\ e : Bool . (\ c : Bool . false)) (if ((\ c : Bool . false) (if a then b else a)) then (if false then (\ d : Bool . c) else (if false then a else c)) else (if true then b else false))) ((if (\ a : Bool . b) then (if a then a else c) else c) (if b then b else b)))
(\ a : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ b : (Bool -> Bool) . (a a)))
(\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> (Bool -> Bool))) . (if (\ a : Bool . (if a then true else true)) then (if false then true else c) else (if a then (\ c : Bool . b) else c)))
(if (\ b : (Bool -> Bool) . (true true)) then (if ((if false then (\ c : Bool . false) else (\ b : Bool . c)) (true (\ a : Bool . a))) then (if (false false) then (if a then c else false) else (\ d : (Bool -> Bool) . (a true))) else (if (if b then true else c) then (if true then false else b) else (false false))) else ((if (true c) then (b false) else a) (\ d : Bool . (if true then c else false))))
(if ((if (\ a : Bool . (b a)) then (\ c : Bool . (\ c : Bool . c)) else (if a then a else b)) ((if a then c else true) (if false then false else a))) then (if (if false then c else a) then (b a) else (b false)) else (\ d : (Bool -> Bool) . (if a then (\ c : Bool . true) else (\ b : Bool . a))))
((\ a : (Bool -> (Bool -> Bool)) . (false false)) (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (\ b : (Bool -> Bool) . (\ a : Bool . c))))
(\ c : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> (Bool -> Bool)))) . (\ b : (Bool -> Bool) . (if b then false else c)))
(if (if (c true) then (if false then false else false) else (\ a : Bool . a)) then (if ((if (\ d : Bool . a) then c else c) (\ e : Bool . a)) then (if (\ d : Bool . true) then (if false then c else a) else (\ c : (Bool -> Bool) . false)) else (if a then c else (if c then c else false))) else ((if (c c) then (\ d : Bool . b) else (c (\ d : Bool . false))) ((\ d : Bool . a) a)))
(if ((((\ d : Bool . b) (b c)) (a (\ d : Bool . c))) ((c b) (\ a : Bool . false))) then (if (b b) then (if (if false then b else false) then (if true then a else a) else (\ a : (Bool -> Bool) . (if false then c else false))) else (\ b : (Bool -> Bool) . (if b then a else b))) else ((true (if c then b else true)) (\ e : Bool . a)))
((\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (b false)) (((if true then a else true) (\ e : Bool . a)) (c c)))
(\ d : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . (if (if (if (if false then b else b) then (if true then false else false) else b) then (\ d : (Bool -> Bool) . (if false then a else c)) else (false false)) then (if (false true) then (\ e : Bool . false) else (if b then c else (if b then a else b))) else (if (false b) then ((false true) (\ e : Bool . c)) else (if b then c else b))))
((\ b : (Bool -> Bool) . (b b)) (if (\ a : ((Bool -> Bool) -> Bool) . (if true then true else false)) then (if (\ d : Bool . a) then ((\ d : Bool . c) (if false then b else a)) else (if b then false else true)) else (if (b true) then b else (a true))))
(if ((false (false false)) (\ c : ((Bool -> Bool) -> Bool) . (if a then c else true))) then (((\ c : Bool . (\ e : Bool . b)) (\ a : Bool . a)) ((\ e : Bool . (\ c : Bool . b)) (\ c : Bool . a))) else (if (if (\ d : Bool . a) then b else (if false then b else b)) then ((\ c : Bool . c) (if b then (c false) else false)) else ((\ b : Bool . (if b then true else c)) (if (false c) then false else true))))
(if ((if (\ e : Bool . a) then (if a then false else c) else (\ b : Bool . false)) (c true)) then (if (false b) then ((a a) (if true then a else c)) else (true c)) else (((true a) (\ a : Bool . false)) ((false true) (c b))))
(if (if (\ e : Bool . false) then ((if a then c else c) a) else (c true)) then ((if a then (\ d : Bool . b) else (\ d : Bool . true)) (true false)) else ((\ b : Bool . c) (if true then b else true)))
(if (if ((\ e : Bool . false) (a c)) then ((if true then b else false) (b c)) else (\ a : (Bool -> Bool) . b)) then (\ e : (Bool -> Bool) . ((false a) b)) else (\ a : (Bool -> (Bool -> Bool)) . (if a then false else (c a))))
(((\ a : (Bool -> Bool) . (c b)) (if (if b then a else (if true then b else true)) then (\ e : (Bool -> Bool) . true) else (false false))) ((if (if (if a then true else false) then c else (a false)) then (if (if c then true else a) then false else false) else ((c a) (a false))) (a (false b))))
((if ((\ e : Bool . a) (\ e : Bool . c)) then (if (\ e : Bool . c) then (if b then true else false) else (if false then true else a)) else (if true then false else (\ c : Bool . b))) ((\ b : Bool . a) (if (false true) then a else (b a))))
(\ b : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . (\ e : (Bool -> Bool) . (false a)))
((\ e : ((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) . ((if false then b else c) (\ b : Bool . b))) (\ d : (Bool -> Bool) . (if c then true else false)))
(if (\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (\ b : Bool . b)) then ((if (true c) then (if false then true else a) else (a false)) (\ d : (Bool -> Bool) . (\ c : (Bool -> Bool) . (\ c : Bool . b)))) else (if (\ c : ((Bool -> Bool) -> Bool) . (\ b : Bool . a)) then (\ c : Bool . (\ a : Bool . c)) else (if (c a) then a else a)))
(if (\ a : ((Bool -> Bool) -> (Bool -> (Bool -> Bool))) . (\ c : (Bool -> Bool) . (if (c a) then b else (\ c : Bool . c)))) then (if (if a then (\ a : Bool . true) else true) then (true (false c)) else (if false then b else true)) else ((if a then a else false) (\ b : (Bool -> Bool) . (if true then a else b))))
(if ((if (\ d : Bool . true) then true else c) ((b true) (\ b : Bool . b))) then (\ b : (Bool -> Bool) . (if true then (if a then a else b) else false)) else (\ e : (Bool -> (Bool -> Bool)) . (\ d : (Bool -> Bool) . false)))
(\ a : ((Bool -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if (\ e : Bool . c) then ((true false) true) else (if b then a else a)))
(((if c then (if b then c else true) else (if b then true else c)) (c a)) ((if c then (true c) else (if c then b else false)) (if b then (if b then a else b) else a)))
(\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (if (((false true) (c true)) (a a)) then ((\ b : Bool . true) (if a then true else b)) else ((false a) (if a then false else c))))
(if (if (if true then (false c) else (\ b : Bool . a)) then (a c) else (\ a : (Bool -> Bool) . (\ b : Bool . b))) then (\ b : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . ((\ a : Bool . false) (true c))) else (if (if b then b else true) then (c true) else ((false b) (if true then b else c))))
(\ c : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . ((true b) (c (c c))))
(\ a : (((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . ((if (b (if true then false else false)) then (if a then (if false then a else b) else (false true)) else (\ e : Bool . true)) (((\ e : Bool . true) true) (if (if a then true else b) then (\ d : Bool . true) else a))))
(\ a : (((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> Bool)) . (if (if (if true then a else false) then (if a then true else false) else (b false)) then (\ b : ((Bool -> Bool) -> Bool) . (if c then false else true)) else (\ e : (Bool -> Bool) . true)))
(((\ d : ((Bool -> Bool) -> Bool) . (true b)) (if (a false) then (if c then b else b) else false)) (if (\ b : Bool . (\ d : Bool . c)) then (if (if c then b else (\ e : Bool . c)) then (if (\ a : Bool . c) then (if true then c else true) else c) else (\ a : Bool . a)) else (\ d : (Bool -> Bool) . (if true then false else c))))
(\ c : (((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) -> (Bool -> Bool)) . (((if true then a else b) true) (\ d : (Bool -> (Bool -> Bool)) . (\ e : Bool . c))))
(\ b : (((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ e : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . ((\ d : Bool . a) true)))
(((\ a : Bool . c) (false a)) ((\ d : Bool . false) (\ b : Bool . false)))
(\ a : ((((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) -> ((Bool -> (Bool -> Bool)) -> (Bool -> Bool))) . (if (if c then false else false) then (\ d : Bool . b) else ((true b) true)))
(\ e : ((Bool -> Bool) -> (Bool -> Bool)) . ((\ c : Bool . false) (\ a : (Bool -> Bool) . c)))
((((\ b : Bool . false) false) ((true b) (\ b : Bool . b))) (if ((if b then a else true) true) then (c false) else (\ e : (Bool -> Bool) . (false b))))
(\ b : ((Bool -> Bool) -> (Bool -> Bool)) . ((\ d : Bool . a) (\ a : Bool . a)))
(\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . ((if false then (if true then a else b) else a) ((b b) (if true then (\ c : Bool . true) else (a true)))))
(if (if (if b then b else a) then (\ e : (Bool -> Bool) . (true true)) else (if a then false else true)) then (if (\ d : Bool . false) then (\ d : Bool . a) else (if true then c else false)) else (if (c (if a then c else false)) then (\ e : (Bool -> Bool) . (if false then true else b)) else (b (if a then c else c))))
(\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (\ c : (Bool -> Bool) . (a a)))
(if (if (c b) then (if c then (\ b : Bool . true) else true) else (\ a : (Bool -> Bool) . (if true then a else false))) then (if (\ c : (Bool -> Bool) . b) then (if ((if b then c else c) (\ e : Bool . true)) then (false (\ d : Bool . false)) else (\ d : (Bool -> Bool) . b)) else (\ d : (Bool -> Bool) . a)) else ((\ d : (Bool -> Bool) . c) (\ b : (Bool -> Bool) . (if b then false else c))))
((\ e : (Bool -> Bool) . (c c)) ((if c then (false a) else (\ c : Bool . true)) (\ e : Bool . b)))
(if ((true c) (if (if false then false else false) then b else (false false))) then ((b false) (\ a : Bool . b)) else (\ e : (Bool -> (Bool -> Bool)) . (if (false a) then (b false) else (\ d : Bool . b))))
(\ c : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if (if (\ d : Bool . b) then ((if b then false else a) (if c then b else a)) else (if false then b else true)) then (\ c : (Bool -> Bool) . true) else (if c then false else (\ e : Bool . c))))
(\ a : (((Bool -> Bool) -> (Bool -> Bool)) -> (((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool)))) . (if (\ c : Bool . true) then (false (if true then false else true)) else (\ b : Bool . a)))
(if (\ e : (Bool -> (Bool -> Bool)) . (true b)) then (if (true (false c)) then (\ e : (Bool -> Bool) . (\ b : Bool . false)) else ((a true) (if c then a else c))) else (if (if b then true else a) then ((\ a : Bool . false) false) else (\ a : Bool . a)))
(if (if (\ a : (Bool -> Bool) . ((a c) (\ d : Bool . false))) then (\ e : (Bool -> Bool) . c) else ((if false then a else c) (c true))) then (if (if (\ b : Bool . c) then (if c then (false a) else false) else (if (if true then b else c) then (\ a : Bool . a) else b)) then (if (if c then c else b) then (\ d : Bool . true) else (true true)) else (\ d : (Bool -> Bool) . (\ a : Bool . true))) else ((((\ e : Bool . c) (false false)) (\ d : Bool . b)) (if (\ e : Bool . true) then (false true) else a)))
(((if (c c) then b else (if c then true else true)) (a (if b then false else c))) (if (\ b : Bool . c) then (if b then c else true) else (if false then false else c)))
(\ c : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . ((if (\ c : Bool . true) then false else (if c then c else a)) (\ d : (Bool -> Bool) . b)))
(\ b : (((Bool -> Bool) -> (Bool -> Bool)) -> (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool))) . (\ a : (Bool -> Bool) . (\ d : Bool . b)))
(\ e : ((Bool -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if (if a then false else true) then (\ e : Bool . true) else (\ a : Bool . a)))
(\ c : ((Bool -> Bool) -> (Bool -> (Bool -> Bool))) . (if (\ e : (Bool -> Bool) . a) then ((a true) a) else (\ b : (Bool -> (Bool -> Bool)) . (\ a : Bool . (b a)))))
((if (\ d : (Bool -> Bool) . (\ e : Bool . c)) then ((if a then a else b) (b c)) else (\ a : (Bool -> (Bool -> Bool)) . (false c))) (if (\ b : Bool . a) then ((c (false true)) (if false then a else c)) else ((\ e : Bool . b) (if c then b else b))))
((\ a : ((Bool -> Bool) -> Bool) . ((\ b : Bool . b) (a true))) (if (\ e : (Bool -> Bool) . c) then (if (\ e : Bool . true) then ((if true then c else b) (\ c : Bool . false)) else (\ a : (Bool -> Bool) . (if c then a else false))) else ((if c then b else b) true)))
(\ e : (((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if ((if c then a else b) (\ b : Bool . false)) then (true (\ c : Bool . a)) else (if (\ c : Bool . (false b)) then (if false then b else true) else (false true))))
(if (if (a (\ b : Bool . a)) then (if false then b else c) else (if false then false else (b false))) then (\ e : (Bool -> Bool) . (if (if a then b else false) then a else (false true))) else (((if a then c else c) false) (false a)))
(if (if (true b) then (if false then b else b) else (if false then false else false)) then (if ((c (if b then a else a)) (if true then false else a)) then (if (a (if true then true else false)) then (\ e : Bool . b) else (\ d : (Bool -> Bool) . a)) else (if c then (\ b : Bool . a) else c)) else (\ a : (Bool -> (Bool -> Bool)) . (\ d : Bool . c)))
(if ((if (if false then c else a) then (\ c : Bool . false) else (if false then a else a)) (if (a a) then (false c) else ((false a) (if false then a else a)))) then ((a (b false)) ((if c then true else false) (if a then c else true))) else (((\ d : Bool . true) (c false)) ((false a) true)))
(\ e : ((Bool -> Bool) -> (Bool -> Bool)) . ((if (if b then b else true) then (true true) else (false true)) (\ c : (Bool -> Bool) . (if a then c else false))))
(if (if (\ d : Bool . (if b then a else true)) then (\ b : (Bool -> Bool) . c) else ((\ e : Bool . a) (b b))) then (\ b : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . (\ d : (Bool -> Bool) . (\ e : Bool . c))) else (\ c : (Bool -> Bool) . (if (\ a : Bool . false) then (\ a : Bool . false) else (\ a : Bool . false))))
(if (if (a b) then (if c then false else true) else (\ c : Bool . b)) then (\ a : (Bool -> Bool) . (if a then (c b) else c)) else (if ((if false then true else a) (true true)) then (\ e : ((Bool -> Bool) -> Bool) . (c b)) else (if true then (if a then false else b) else c)))
((\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (if (if a then c else b) then (if a then false else (if b then b else true)) else (true (a true)))) (if (if false then true else b) then (if (c a) then (\ d : Bool . b) else a) else (if (false false) then (if b then c else a) else (if a then c else (if b then b else a)))))
(\ b : (((Bool -> Bool) -> (Bool -> Bool)) -> (((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> Bool))) . (if (if c then c else c) then (a false) else (a (c a))))
(if ((if a then false else a) (false (\ e : Bool . false))) then (if ((if c then c else c) (if (\ b : Bool . true) then (c false) else (if c then a else a))) then (if (\ d : Bool . a) then (true b) else c) else (if b then true else c)) else (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (a true)))
(if (if (if (c a) then (\ d : Bool . a) else (\ e : (Bool -> Bool) . (true c))) then (\ c : ((Bool -> Bool) -> Bool) . ((\ e : Bool . a) c)) else (b (a false))) then (if (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (\ d : (Bool -> Bool) . (true true))) then (\ a : (Bool -> (Bool -> Bool)) . (\ e : Bool . true)) else ((\ a : (Bool -> Bool) . a) (\ a : Bool . a))) else (\ c : (Bool -> (Bool -> Bool)) . (if (c a) then (\ b : Bool . c) else (\ d : Bool . b))))
(\ d : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if (if (\ a : Bool . c) then (\ a : Bool . a) else (\ c : Bool . (false c))) then ((if (a false) then true else (if true then c else true)) (a b)) else (\ d : (Bool -> Bool) . (if b then c else c))))
(if (\ c : (Bool -> Bool) . (\ e : (Bool -> Bool) . (\ d : Bool . true))) then (if (if (if true then c else b) then (\ e : Bool . (\ a : Bool . c)) else (\ b : Bool . false)) then (if (\ d : Bool . (if b then true else false)) then (\ c : Bool . c) else (if (if true then true else a) then false else (c true))) else (if (true c) then (if c then b else false) else (if true then a else (\ d : Bool . a)))) else ((if (true true) then (if a then b else b) else (if b then b else false)) (\ b : (Bool -> Bool) . (c (\ a : Bool . a)))))
(\ b : ((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) . (((a a) b) ((true (false a)) (if a then (\ b : Bool . false) else false))))
(if (if (b c) then (\ a : Bool . true) else (false c)) then (if (if b then false else false) then ((if a then true else a) (\ a : Bool . c)) else ((a true) (if true then c else b))) else (if (c b) then (if c then (if b then false else a) else false) else (b false)))
((if (\ b : Bool . true) then (if false then true else b) else (if a then false else b)) (\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (\ d : (Bool -> Bool) . ((\ c : Bool . true) (\ a : Bool . true)))))
((if (if (\ c : Bool . c) then (if false then true else b) else (b (\ d : Bool . a))) then (if (if c then false else true) then (if b then a else (c false)) else (\ b : Bool . true)) else (if b then (false b) else (\ a : Bool . false))) (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (\ b : (Bool -> Bool) . b)))
(if ((if (true b) then true else (\ a : Bool . b)) (\ b : Bool . false)) then (\ b : (Bool -> Bool) . (true false)) else (\ a : ((Bool -> Bool) -> Bool) . (c a)))
(\ b : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> (Bool -> Bool))) . ((\ b : (Bool -> Bool) . (\ c : Bool . false)) (if true then a else a)))
(if (if (if (\ e : Bool . true) then (if true then a else true) else (\ e : Bool . false)) then (false (c false)) else (if c then (a b) else (if a then a else a))) then (\ c : ((Bool -> Bool) -> Bool) . (if (\ c : Bool . true) then (\ a : Bool . a) else (if b then false else true))) else ((\ c : Bool . false) (\ c : Bool . b)))
(\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (if (if b then (false b) else (\ d : Bool . false)) then (true c) else (if c then a else true)))
(\ d : (((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) -> (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> (Bool -> Bool)))) . (if (if (if (if b then a else false) then (if false then false else a) else true) then ((c false) true) else ((a a) (false b))) then (if (if c then (c b) else true) then (\ d : Bool . false) else (if (if false then a else a) then (\ d : Bool . b) else a)) else (\ c : (Bool -> Bool) . false)))
((if (if (true c) then (if true then (false false) else (if false then false else true)) else (if (\ c : Bool . c) then (if c then true else true) else (\ a : Bool . a))) then (\ a : (Bool -> Bool) . (\ b : (Bool -> Bool) . (\ e : Bool . false))) else ((\ c : Bool . true) (\ e : Bool . false))) (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (if b then (false true) else true)))
((\ a : (Bool -> (Bool -> Bool)) . (if (\ b : Bool . a) then (\ c : Bool . true) else a)) ((if b then a else c) (if true then c else c)))
(((\ a : Bool . c) (if true then a else a)) (\ a : (Bool -> Bool) . ((true true) c)))
(if (\ d : (Bool -> Bool) . (\ b : (Bool -> Bool) . (false c))) then (\ d : (Bool -> Bool) . (\ e : Bool . c)) else (if (\ c : (Bool -> Bool) . true) then (\ d : Bool . b) else (true false)))
(if (\ c : (Bool -> (Bool -> Bool)) . ((b c) (if false then a else b))) then (if (\ a : (Bool -> (Bool -> Bool)) . (if false then c else false)) then ((if b then a else c) (if false then true else true)) else (if (false b) then (\ a : (Bool -> Bool) . true) else (if b then false else false))) else (if (c true) then (\ b : ((Bool -> Bool) -> Bool) . (false c)) else (if (false a) then (if false then a else (c false)) else (\ b : Bool . b))))
(((if (\ b : Bool . false) then b else (if false then a else false)) (if (\ e : Bool . false) then (if b then b else b) else ((if b then a else true) (a c)))) (if (\ e : Bool . b) then (if b then a else a) else (\ d : (Bool -> Bool) . (\ b : Bool . c))))
(\ a : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (if c then b else c)))
((\ b : (Bool -> (Bool -> Bool)) . (\ e : (Bool -> Bool) . b)) (if (if b then b else true) then (false false) else (\ b : Bool . true)))
((\ b : (Bool -> Bool) . (if (\ b : Bool . c) then (\ c : Bool . a) else true)) (if ((if (b b) then true else c) (false false)) then (if ((\ e : Bool . a) b) then (if (if true then c else a) then true else false) else (false false)) else (\ b : (Bool -> Bool) . (\ c : Bool . false))))
(if (if (false b) then (if true then a else (\ a : Bool . a)) else (c (true true))) then (if ((if false then a else true) (if a then a else c)) then (if (\ c : Bool . false) then (b b) else (\ c : (Bool -> Bool) . true)) else (if (if c then false else false) then (\ a : Bool . c) else (if a then (if c then false else true) else true))) else (if ((\ e : (Bool -> Bool) . (if false then a else a)) (false c)) then (a false) else (\ d : (Bool -> Bool) . (c false))))
((\ c : (Bool -> Bool) . (if (if a then b else c) then a else b)) (if (false (if true then c else b)) then (\ c : Bool . true) else (b c)))
(\ e : (((Bool -> Bool) -> (Bool -> (Bool -> Bool))) -> ((Bool -> Bool) -> (Bool -> Bool))) . ((if a then true else a) (if b then c else c)))
(if (if (if b then true else b) then (if c then (false a) else b) else (\ b : Bool . (\ d : Bool . b))) then ((c false) ((\ d : Bool . false) (if true then a else false))) else ((\ e : Bool . false) (if b then b else c)))
(\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . ((if (b (true a)) then ((if a then a else a) a) else (false b)) (c a)))
(\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool))) . (if (\ a : ((Bool -> Bool) -> Bool) . (if c then (\ a : Bool . b) else false)) then (if (b b) then c else c) else (\ a : Bool . false)))
(if (\ c : (Bool -> Bool) . (true (if a then true else false))) then (if (\ a : Bool . (if true then a else c)) then (if b then true else c) else (false false)) else (\ e : ((Bool -> Bool) -> Bool) . ((if false then a else false) c)))
(\ e : ((Bool -> (Bool -> Bool)) -> (Bool -> (Bool -> Bool))) . (if (\ d : Bool . a) then (if false then c else c) else (if b then b else b)))
(\ d : (((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ c : ((Bool -> Bool) -> Bool) . (\ b : (Bool -> Bool) . true)))
(if (if (\ a : (Bool -> Bool) . (if a then false else b)) then (\ d : (Bool -> Bool) . (\ c : Bool . a)) else (\ b : (Bool -> (Bool -> Bool)) . (if b then false else c))) then (if ((if false then c else c) b) then ((if false then b else a) c) else ((b false) (c true))) else (((\ b : (Bool -> Bool) . (\ d : Bool . b)) (if false then a else true)) (if (if false then a else (if true then b else false)) then (if c then b else c) else (c true))))
(if (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (\ c : (Bool -> Bool) . (\ e : Bool . a))) then (if (\ d : Bool . a) then (b c) else ((c a) (a c))) else (if (if (if false then b else a) then false else (true true)) then (a true) else (if a then false else c)))
(\ b : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (((c a) c) (if (if (c a) then a else (\ c : Bool . a)) then (if b then a else a) else ((if c then true else false) (if false then false else true)))))
(if (\ e : ((Bool -> Bool) -> Bool) . (false (if a then a else false))) then (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (\ c : Bool . false)) else (if (if (c b) then (if b then c else b) else (\ b : Bool . false)) then (if true then (if c then a else a) else b) else (\ b : Bool . (\ a : Bool . c))))
(if (\ d : ((Bool -> Bool) -> Bool) . (a (b a))) then ((c true) (\ a : Bool . a)) else (\ e : (Bool -> Bool) . (\ a : Bool . a)))
(if ((if false then (\ b : Bool . a) else c) (if a then a else a)) then ((if (c true) then true else (false a)) (c b)) else (\ c : (Bool -> Bool) . (a true)))
((\ a : (Bool -> Bool) . (\ a : (Bool -> Bool) . c)) (\ d : (Bool -> Bool) . (b b)))
(\ d : (((Bool -> Bool) -> Bool) -> (Bool -> (Bool -> Bool))) . (\ b : (Bool -> Bool) . ((if a then a else false) c)))
((\ c : (Bool -> Bool) . (false true)) (((if a then b else a) (if (\ b : Bool . c) then (\ a : Bool . false) else true)) (if (\ c : Bool . b) then false else c)))
(\ d : (((Bool -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) -> ((Bool -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool)))) . (if (if (\ d : Bool . c) then ((if false then c else c) (\ a : Bool . a)) else (\ d : Bool . false)) then ((if a then c else a) (if b then false else c)) else (if (\ c : Bool . true) then (\ b : (Bool -> Bool) . true) else (\ b : Bool . (false a)))))
(if (if (if (if b then a else c) then false else (\ b : Bool . c)) then ((c true) ((\ d : Bool . true) (if c then b else c))) else (if (\ e : Bool . false) then (c c) else b)) then (if ((\ c : Bool . c) (\ b : Bool . (if c then false else c))) then (\ c : (Bool -> Bool) . (if (if false then a else true) then (\ b : Bool . c) else (if false then c else true))) else ((\ d : Bool . true) (\ c : Bool . a))) else ((if (if a then c else true) then (if true then true else a) else c) (if (true a) then (if true then false else true) else (if c then b else true))))
(((c true) (if (c b) then false else c)) (\ e : (Bool -> Bool) . (\ e : (Bool -> Bool) . (\ e : Bool . b))))
(\ a : ((Bool -> Bool) -> (Bool -> (Bool -> Bool))) . (\ a : (Bool -> Bool) . ((\ d : Bool . b) (\ d : Bool . true))))
(\ d : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . (\ a : (Bool -> Bool) . (if (if b then b else true) then false else true)))
(\ e : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . ((true b) (if (\ a : Bool . true) then b else (false a))))
(if (((if a then false else b) a) (\ b : Bool . b)) then ((\ e : ((Bool -> Bool) -> Bool) . (\ a : Bool . a)) (\ a : (Bool -> Bool) . (\ c : Bool . a))) else (if (if c then (if a then b else c) else true) then (true c) else (b c)))
(\ d : (((Bool -> Bool) -> Bool) -> (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool))) . (if (\ d : Bool . false) then (\ b : Bool . true) else (\ c : Bool . c)))
(if ((if false then (false b) else a) (if a then (\ c : Bool . b) else (\ e : Bool . b))) then (if (\ c : (Bool -> Bool) . (a b)) then ((b b) (if b then (\ d : Bool . b) else (if a then c else false))) else (\ c : Bool . (if true then true else false))) else (\ a : ((Bool -> Bool) -> Bool) . (\ d : (Bool -> (Bool -> Bool)) . (if a then c else a))))
(if (((if a then a else false) (if b then a else a)) ((\ a : Bool . (\ b : Bool . c)) (if c then c else a))) then ((if ((a false) c) then (b c) else (b b)) (\ b : Bool . b)) else (if (if false then b else false) then (\ a : (Bool -> Bool) . b) else ((if true then b else true) b)))
(if ((\ e : (Bool -> Bool) . (\ e : Bool . true)) (\ b : (Bool -> Bool) . (if false then a else b))) then (if ((c c) (\ b : Bool . false)) then (if true then (a c) else false) else (\ d : (Bool -> Bool) . true)) else (if ((if c then true else b) (\ e : Bool . true)) then (if b then (a false) else true) else (\ d : Bool . (if true then false else false))))
(\ a : ((Bool -> (Bool -> Bool)) -> (Bool -> (Bool -> Bool))) . (\ b : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (false (a b))))
((if (\ d : Bool . c) then (if a then b else false) else (false (b c))) (if (if (\ d : Bool . true) then (a false) else (false (if false then a else true))) then (\ e : (Bool -> Bool) . a) else (c false)))
(\ e : ((Bool -> Bool) -> (Bool -> Bool)) . ((a (if b then false else b)) ((false true) (\ c : Bool . c))))
(((\ c : (Bool -> Bool) . (\ b : Bool . (c false))) ((if b then c else a) (true false))) ((false true) (false b)))
(if (if ((\ e : Bool . true) (a (c c))) then ((\ b : Bool . a) b) else ((c true) ((\ c : Bool . c) (\ e : Bool . false)))) then ((if (c true) then (if c then true else false) else (if true then false else true)) (if a then true else a)) else (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (if a then (true b) else (if a then b else c))))
(if (\ d : ((Bool -> Bool) -> Bool) . (\ d : (Bool -> Bool) . (\ d : Bool . c))) then (\ b : (Bool -> Bool) . ((a true) true)) else (((\ c : Bool . true) a) (((true false) true) ((if true then false else b) (\ a : Bool . c)))))
(if ((\ c : Bool . a) ((\ a : Bool . false) b)) then ((\ e : Bool . (a a)) (\ d : Bool . false)) else (\ e : (Bool -> Bool) . (\ d : Bool . b)))
(if (if (if b then false else b) then (\ e : (Bool -> Bool) . false) else ((if c then (\ e : Bool . b) else (true b)) ((\ b : Bool . a) (false c)))) then ((a b) ((\ a : Bool . a) a)) else (\ d : (Bool -> Bool) . (if a then false else false)))
(if (\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (\ b : (Bool -> Bool) . (if c then false else b))) then (\ d : (Bool -> Bool) . (\ a : Bool . true)) else ((\ e : (Bool -> Bool) . false) (false true)))
(if (if ((b b) true) then (\ b : (Bool -> Bool) . (if a then (if a then c else true) else (if true then b else a))) else (if false then (true false) else (\ a : Bool . c))) then (if (if true then a else true) then (true (false c)) else ((true false) (if true then false else c))) else ((\ c : Bool . b) (\ c : Bool . a)))
((\ b : (Bool -> Bool) . (\ e : Bool . (\ d : Bool . c))) (\ c : (Bool -> Bool) . (if (if false then a else c) then false else (if false then a else false))))
(((\ a : (Bool -> Bool) . (if true then c else c)) (\ d : Bool . c)) (\ c : (Bool -> (Bool -> Bool)) . (\ a : (Bool -> Bool) . (c true))))
(\ c : ((((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) -> (Bool -> Bool)) . (if (\ c : Bool . true) then (c false) else (\ c : Bool . true)))
(if ((\ c : Bool . true) (b (if true then b else false))) then ((if false then (if b then true else c) else (false b)) (\ b : Bool . a)) else (((\ d : Bool . b) a) (if c then a else true)))
(\ d : ((Bool -> Bool) -> (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool))) . (\ b : ((Bool -> Bool) -> Bool) . ((\ e : (Bool -> Bool) . (a true)) (\ e : Bool . false))))
((((if b then true else b) (\ c : Bool . b)) (\ e : Bool . true)) ((\ d : (Bool -> Bool) . (\ c : Bool . true)) (\ e : (Bool -> Bool) . a)))
(\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool)))) . (if (if false then b else c) then (true b) else (true true)))
(\ c : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (\ a : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (\ d : (Bool -> Bool) . (\ a : Bool . c))))
((\ c : (Bool -> (Bool -> Bool)) . ((if c then b else a) (if a then a else c))) (if ((if c then a else false) (\ b : Bool . true)) then (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (if true then false else true)) else (\ c : (Bool -> Bool) . (if a then b else (false true)))))
(if (\ d : (Bool -> Bool) . ((false true) (\ b : Bool . b))) then (if (b c) then (a b) else (\ b : Bool . b)) else ((\ c : (Bool -> Bool) . (if b then true else c)) (if false then (if b then b else c) else b)))
(\ c : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . (if (if ((\ e : Bool . c) c) then (\ b : Bool . c) else (\ d : Bool . false)) then ((true a) (\ e : Bool . b)) else (if c then false else false)))
(\ b : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> Bool)) . (if (\ d : Bool . c) then (false c) else ((if b then a else false) (\ c : Bool . c))))
((\ c : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . (c (\ b : Bool . c))) (\ e : (Bool -> Bool) . ((if a then c else b) false)))
(if ((if (\ a : (Bool -> Bool) . a) then ((b a) (if false then b else true)) else (c a)) (if (true true) then a else (if b then true else b))) then (\ c : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . ((\ c : Bool . c) (\ e : Bool . false))) else (\ c : ((Bool -> Bool) -> (Bool -> Bool)) . ((\ a : Bool . b) (\ c : (Bool -> Bool) . (if false then a else false)))))
(\ b : (((Bool -> Bool) -> Bool) -> (Bool -> (Bool -> Bool))) . ((\ a : ((Bool -> Bool) -> Bool) . (if false then b else a)) (if ((true a) (if a then false else false)) then (b a) else (a false))))
(if (if (if (\ e : Bool . false) then (\ b : Bool . true) else (if false then a else a)) then (\ e : Bool . true) else ((a c) (if c then false else true))) then (if ((\ d : (Bool -> Bool) . c) (\ c : Bool . c)) then (\ b : Bool . (\ e : Bool . b)) else (\ b : (Bool -> Bool) . (c b))) else (if (if (\ e : Bool . a) then true else (if c then false else a)) then (a c) else (if b then true else b)))
(\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (((\ c : Bool . false) a) (if (\ a : Bool . c) then (\ d : Bool . c) else ((\ c : Bool . b) (if b then true else true)))))
((\ d : ((Bool -> Bool) -> Bool) . ((if (\ c : Bool . b) then (false true) else (false a)) (if true then false else (false false)))) (((\ d : (Bool -> Bool) . true) (c true)) (\ b : (Bool -> Bool) . (c c))))
((if (((false c) (if b then a else true)) (\ c : Bool . true)) then ((b true) (if true then b else c)) else ((\ e : Bool . false) (\ b : Bool . (\ c : Bool . b)))) (\ c : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . (if (\ a : Bool . true) then (true a) else (if (if b then false else false) then (if true then a else a) else a))))
(\ c : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . ((if false then b else b) (\ a : (Bool -> Bool) . (if c then true else c))))
((if (if (if a then false else true) then (if a then c else a) else b) then (\ c : Bool . true) else (\ c : Bool . (\ e : Bool . true))) (if (true false) then (if false then (if c then true else false) else (\ e : Bool . a)) else (c false)))
(\ a : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (\ d : (Bool -> Bool) . ((if false then c else false) c)))
((if (false (b a)) then (if (false b) then (if false then a else c) else (if c then c else a)) else (\ a : Bool . b)) (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . ((a b) (\ e : Bool . a))))
(if ((\ e : Bool . false) (if a then c else b)) then ((\ c : Bool . a) (if c then b else false)) else (if (if b then (\ e : Bool . false) else b) then ((b false) (\ d : Bool . a)) else ((\ e : Bool . true) (\ a : Bool . b))))
((\ e : (Bool -> (Bool -> Bool)) . ((\ a : Bool . c) (if false then b else true))) (if ((\ e : Bool . c) false) then (if (if c then a else c) then (a a) else b) else (\ d : Bool . c)))
(\ b : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . (\ a : (Bool -> Bool) . ((\ d : Bool . c) (\ c : Bool . true))))
((if (\ a : Bool . false) then (if (true false) then (a false) else (true a)) else (true b)) (((\ c : Bool . c) (\ c : Bool . true)) (if false then (\ a : Bool . a) else true)))
(if (if ((if b then a else b) true) then ((if true then c else false) (a c)) else ((if a then true else b) true)) then (((\ c : Bool . (b a)) (a c)) (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . ((a c) c))) else ((((\ a : Bool . b) (\ c : Bool . a)) ((\ b : Bool . b) b)) (\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (false false))))
((if (\ a : (Bool -> Bool) . (\ b : (Bool -> Bool) . a)) then (if (b c) then ((if c then c else true) true) else (\ c : (Bool -> Bool) . (if true then c else false))) else ((\ e : Bool . b) (\ e : (Bool -> Bool) . a))) (\ a : (Bool -> Bool) . (\ d : Bool . c)))
((if (if (if a then (false true) else false) then (\ a : Bool . false) else (\ c : Bool . c)) then (if true then (if b then c else b) else true) else (\ b : (Bool -> Bool) . c)) (\ b : (Bool -> (Bool -> Bool)) . (if c then c else b)))
((if (\ a : (Bool -> Bool) . (if c then c else a)) then (\ d : (Bool -> Bool) . (if true then true else true)) else (b false)) (\ e : (Bool -> Bool) . (if false then a else false)))
(\ b : (((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (\ b : Bool . b)))
(if ((if (if c then b else b) then (if (if c then c else b) then (if c then c else a) else (a b)) else (\ b : (Bool -> Bool) . (\ a : Bool . false))) (\ b : (Bool -> Bool) . c)) then (if (\ c : Bool . b) then (\ e : Bool . a) else (\ c : Bool . false)) else (if (a c) then (\ d : Bool . a) else (a a)))
(if (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . ((\ e : Bool . b) (\ c : Bool . b))) then (if (\ d : ((Bool -> Bool) -> Bool) . (if true then c else b)) then (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (\ c : Bool . true)) else ((\ c : Bool . true) (\ a : Bool . a))) else (if (\ e : (Bool -> Bool) . b) then (\ d : Bool . (a true)) else (if false then false else (if true then b else false))))
(\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (if (\ c : Bool . (if false then b else c)) then (\ a : Bool . false) else (if b then (if c then false else b) else true)))
(if (if (\ d : (Bool -> Bool) . (c a)) then (((\ c : Bool . b) (if c then c else false)) (a c)) else (a (false true))) then (if (\ d : Bool . (if a then b else false)) then ((if a then a else (if a then a else a)) (a a)) else ((if false then b else b) b)) else ((\ c : Bool . c) (\ e : Bool . c)))
(if (if (c b) then (if b then b else c) else (\ c : (Bool -> Bool) . false)) then (\ a : (Bool -> Bool) . (if false then true else false)) else (\ a : (Bool -> (Bool -> Bool)) . ((\ d : (Bool -> Bool) . b) (if c then c else b))))
(\ c : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . (if (\ d : (Bool -> Bool) . a) then ((\ a : Bool . (\ d : Bool . c)) (\ d : Bool . true)) else (if (\ a : Bool . false) then (\ d : Bool . a) else (a c))))
(\ a : (((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if ((false true) (true true)) then (\ a : (Bool -> Bool) . (if (if c then b else true) then (c false) else a)) else ((if c then b else a) (if (false a) then false else true))))
(\ e : ((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) . (\ b : (Bool -> Bool) . ((b true) b)))
(if ((\ b : (Bool -> (Bool -> Bool)) . (c false)) ((if b then b else a) (c a))) then ((if false then true else true) (if b then (a true) else (c a))) else (\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (\ d : (Bool -> Bool) . c)))
(\ a : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . (((b c) a) (true true)))
(if ((if c then (\ c : Bool . a) else (b b)) (\ b : Bool . b)) then ((\ a : ((Bool -> Bool) -> Bool) . (if true then false else (\ d : Bool . false))) (true b)) else ((if (true c) then b else (true b)) (\ b : Bool . true)))
(if (\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (if (if c then true else (if c then true else false)) then (if b then a else (true a)) else (c true))) then (if ((b a) (if a then b else false)) then (true true) else (if b then (\ a : Bool . c) else false)) else ((false b) (c b)))
(\ b : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> (Bool -> Bool)))) . (if ((\ a : (Bool -> Bool) . true) (if true then false else c)) then (if (\ c : Bool . false) then (\ c : Bool . (b c)) else (\ e : Bool . c)) else (if (true b) then true else (true c))))
(\ e : (((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) -> ((Bool -> Bool) -> ((Bool -> Bool) -> Bool))) . (if (if (if (\ a : Bool . c) then (if c then c else b) else b) then (false (\ c : Bool . false)) else (if true then a else true)) then (\ e : (Bool -> Bool) . a) else (if (if b then true else a) then b else false)))
(\ b : ((((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) -> ((Bool -> Bool) -> Bool)) . (\ a : ((Bool -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if (if true then a else false) then (if true then false else a) else false)))
(if (if (\ c : Bool . c) then (if b then b else c) else (\ b : Bool . false)) then (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . ((if a then c else c) (\ a : (Bool -> Bool) . (if b then false else c)))) else ((if (a c) then (\ a : Bool . true) else a) ((b (\ b : Bool . c)) (\ c : Bool . a))))
(\ b : (((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . ((false c) (\ a : Bool . a)))
(((\ e : Bool . false) (\ c : Bool . false)) (if (if c then a else (\ a : Bool . c)) then (false (if false then a else c)) else (\ b : Bool . true)))
(((\ d : (Bool -> Bool) . (c a)) (if true then a else false)) ((if (if b then true else c) then b else (if b then true else true)) (\ c : Bool . true)))
(((if (if a then true else c) then (if b then true else c) else (\ a : Bool . a)) ((\ a : Bool . a) (false a))) (if (\ e : (Bool -> (Bool -> Bool)) . (a (if true then false else true))) then (false (b true)) else (\ a : (Bool -> Bool) . (b (a b)))))
(\ b : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if (\ d : (Bool -> Bool) . (\ e : (Bool -> Bool) . (a true))) then ((if a then b else c) (b true)) else (\ b : (Bool -> Bool) . false)))
((if ((false a) (\ d : Bool . c)) then ((if c then b else false) b) else (((if c then c else b) true) (if a then a else true))) (\ c : (Bool -> Bool) . ((true b) (c false))))
((if (\ d : Bool . a) then (\ d : Bool . (c b)) else (if b then true else c)) ((if a then c else a) ((c b) true)))
((\ d : (Bool -> Bool) . (false a)) (if (\ b : (Bool -> Bool) . c) then (a b) else (\ d : Bool . false)))
(((c (\ b : Bool . c)) (\ b : Bool . b)) (if (\ c : (Bool -> Bool) . c) then (if (\ b : Bool . a) then (false false) else (true a)) else (if a then b else a)))
((if (\ b : Bool . c) then (false b) else (if b then (if b then true else false) else (c b))) ((c (false false)) ((a true) (if true then (a a) else (if c then c else true)))))
(if (\ e : (Bool -> Bool) . (\ c : Bool . a)) then (\ a : ((Bool -> Bool) -> Bool) . (false (a true))) else (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (\ d : Bool . c)))
(if ((\ a : (Bool -> Bool) . true) (true (\ e : Bool . a))) then (if (\ b : (Bool -> Bool) . (if a then c else a)) then (if (if (\ d : Bool . true) then (if b then false else b) else (b true)) then (c a) else (\ e : Bool . c)) else ((\ b : Bool . (if b then b else false)) (b true))) else (if (\ e : ((Bool -> Bool) -> Bool) . (a a)) then ((if (false b) then (b a) else b) (\ c : (Bool -> Bool) . false)) else (if b then a else b)))
(\ c : ((Bool -> Bool) -> (Bool -> Bool)) . ((\ a : (Bool -> Bool) . true) (true b)))
((if (true true) then ((if b then a else true) (if c then b else true)) else (((a c) (a a)) ((if b then b else true) a))) ((if (\ c : Bool . true) then ((if a then c else c) false) else (true true)) ((true a) (\ e : Bool . true))))
(\ d : ((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) . (\ b : (Bool -> Bool) . (a a)))
(((\ c : (Bool -> Bool) . true) (if true then b else false)) (if (if true then a else b) then (\ d : Bool . c) else (if b then b else b)))
((if (if (\ e : Bool . c) then true else (a a)) then (c c) else ((if a then true else b) (\ d : Bool . c))) (if ((if c then c else c) (if b then false else false)) then (if c then true else true) else (if (\ a : (Bool -> Bool) . (if a then b else c)) then (if false then b else a) else (c c))))
(\ d : (((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) -> (((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool)))) . (\ c : ((Bool -> Bool) -> Bool) . ((\ e : Bool . c) (if b then c else a))))
(\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . ((true b) (b b)))
(\ d : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ d : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (((false b) c) ((if b then b else c) (if c then false else c)))))
(\ b : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . ((\ e : Bool . a) (false a)))
(if (if ((\ a : Bool . b) (b a)) then (\ d : (Bool -> Bool) . (true b)) else (if (\ c : Bool . b) then (b c) else true)) then (if ((\ e : Bool . (if a then a else true)) (false b)) then (\ b : Bool . b) else (\ a : (Bool -> Bool) . (a (a false)))) else (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (\ a : (Bool -> Bool) . false)))
(\ c : (((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) -> ((Bool -> Bool) -> Bool)) . (\ c : ((Bool -> Bool) -> Bool) . (if b then true else false)))
(if ((\ c : (Bool -> Bool) . (if (\ b : Bool . b) then a else (if c then true else true))) (\ c : Bool . (if false then false else b))) then (if (if (b false) then (\ e : Bool . true) else (\ c : Bool . a)) then ((if c then a else c) (b c)) else (if (\ d : Bool . true) then (\ d : Bool . c) else (\ e : Bool . true))) else (((c false) (if true then false else true)) ((if true then b else c) a)))
((if (b a) then (if (b b) then (\ e : Bool . false) else (\ d : Bool . b)) else (if (true a) then (if c then c else a) else (if a then (true b) else (true false)))) (\ e : (Bool -> Bool) . (\ d : ((Bool -> Bool) -> Bool) . (if (if c then c else b) then true else (\ e : Bool . b)))))
((\ c : ((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) . ((b c) (\ d : Bool . c))) ((true b) (if (\ c : (Bool -> Bool) . a) then (\ b : Bool . true) else (if (if b then c else true) then (a b) else a))))
(if (((if c then a else true) (c a)) (if c then (if b then a else c) else (\ c : Bool . false))) then (if (if true then b else (if c then c else c)) then (\ b : (Bool -> Bool) . (c c)) else (b false)) else ((\ b : (Bool -> (Bool -> Bool)) . (false (c a))) (if c then a else c)))
((if (\ a : (Bool -> (Bool -> Bool)) . (if false then a else (if a then false else true))) then ((a b) (true (true a))) else (if (if a then b else b) then c else b)) (if (\ d : (Bool -> Bool) . c) then (\ b : (Bool -> Bool) . (if a then a else true)) else ((if true then true else b) c)))
(if ((false true) (if (if b then b else false) then (\ b : Bool . a) else false)) then (((c a) (\ c : Bool . true)) ((false c) (if b then c else c))) else ((true (true true)) (\ d : (Bool -> Bool) . (b c))))
(\ a : (((Bool -> Bool) -> (Bool -> Bool)) -> (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> Bool))) . (if (if c then b else a) then (if b then c else c) else ((true true) (if a then (if c then b else b) else false))))
(\ e : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . (if (a (if c then b else true)) then (\ c : (Bool -> Bool) . (if false then c else b)) else (if (\ c : Bool . false) then (true a) else (\ e : Bool . true))))
(\ c : ((Bool -> Bool) -> (Bool -> Bool)) . ((if (true (c true)) then (c a) else (\ d : (Bool -> Bool) . (\ d : Bool . false))) (false true)))
(\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (\ c : ((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) . (\ e : (Bool -> Bool) . true)))
(\ d : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ a : (Bool -> Bool) . (\ b : Bool . c)))
(\ b : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . (\ b : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . ((\ a : (Bool -> Bool) . (\ d : Bool . b)) (b c))))
((\ a : (Bool -> Bool) . (c b)) (if ((if (true false) then true else c) (\ a : Bool . c)) then ((\ b : (Bool -> Bool) . true) (\ a : Bool . c)) else (\ b : (Bool -> Bool) . (if a then b else c))))
(\ b : ((Bool -> (Bool -> Bool)) -> ((Bool -> Bool) -> Bool)) . (\ c : ((Bool -> Bool) -> (Bool -> Bool)) . ((c a) (false (a c)))))
(\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (\ b : (Bool -> (Bool -> Bool)) . (false b))))
(if (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (if (\ d : Bool . a) then ((\ b : Bool . a) (if b then b else false)) else (if a then (\ d : Bool . false) else (if true then c else true)))) then ((if (\ b : Bool . (c c)) then (\ d : (Bool -> Bool) . c) else (\ e : Bool . (if a then c else a))) ((\ b : Bool . true) (\ a : Bool . b))) else (if (b true) then (c (\ d : Bool . c)) else (if b then (if c then false else false) else (if false then true else true))))
(((b c) (\ a : Bool . true)) (if (((\ a : Bool . true) (if c then true else b)) (\ d : Bool . b)) then (\ e : Bool . (\ b : Bool . true)) else (\ a : Bool . (if c then a else a))))
(if (\ e : (Bool -> Bool) . (if (true c) then (true a) else (if c then true else c))) then (\ e : (Bool -> Bool) . (\ a : (Bool -> Bool) . (if true then false else b))) else (if (\ b : (Bool -> Bool) . (\ b : Bool . c)) then ((\ d : Bool . a) false) else (\ b : Bool . c)))
(((a (if a then c else b)) ((\ c : Bool . a) a)) ((\ e : Bool . b) (false (\ b : Bool . true))))
((if (if (false a) then c else a) then ((if true then (if a then c else false) else false) (\ e : Bool . true)) else (if (b false) then c else (\ a : Bool . false))) ((c (if a then a else c)) (false b)))
(if (if (\ a : Bool . a) then (c c) else (\ a : Bool . b)) then (if (\ a : (Bool -> Bool) . (c a)) then (b false) else (if false then b else c)) else ((\ a : Bool . (\ d : Bool . a)) ((if true then b else a) (b false))))
(\ b : (((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) -> ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool)))) . (\ b : (Bool -> Bool) . (if (if false then a else false) then c else c)))
(\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . ((\ d : Bool . c) (if a then b else true)))
(if (if (if a then true else true) then (b b) else (\ a : Bool . false)) then (((a true) (if a then c else a)) (\ c : Bool . b)) else (if (\ d : Bool . true) then (\ a : Bool . a) else (\ b : Bool . false)))
(if (if (false c) then ((\ e : Bool . (b c)) (\ b : Bool . (if b then c else b))) else (\ c : (Bool -> Bool) . (\ e : Bool . b))) then (if ((\ a : (Bool -> Bool) . (c c)) (a true)) then (c true) else (\ d : (Bool -> (Bool -> Bool)) . (if b then (a true) else (c true)))) else (if (if false then a else false) then (\ b : Bool . (\ d : Bool . true)) else (\ a : (Bool -> Bool) . b)))
(if (if (c a) then ((\ c : Bool . c) (if true then c else c)) else (a (if c then b else c))) then (if (\ d : (Bool -> Bool) . (\ c : Bool . b)) then ((\ e : (Bool -> Bool) . c) ((a a) true)) else (if (\ c : Bool . c) then (true c) else (\ d : Bool . b))) else (if (if c then a else b) then ((b b) (\ d : Bool . b)) else (\ d : (Bool -> Bool) . (b b))))
(\ c : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if (if (b a) then (if c then (if b then c else a) else b) else (if (if false then false else c) then (\ a : Bool . b) else b)) then (if true then a else b) else (\ a : Bool . (a false))))
(if ((if false then (b true) else (if false then true else b)) (if (b false) then (\ a : Bool . c) else (false true))) then (if (\ e : Bool . a) then (\ c : Bool . c) else (a true)) else (if (a (\ a : Bool . false)) then (\ a : (Bool -> Bool) . ((\ a : Bool . b) true)) else (if false then a else (\ a : Bool . c))))
(((\ d : Bool . (false false)) (if c then b else true)) ((\ d : Bool . true) (if true then a else false)))
(\ c : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> Bool)) . ((\ d : Bool . (c b)) (c b)))
((if (if b then false else (if a then true else false)) then (b true) else (true false)) ((if (false true) then (\ a : Bool . false) else ((c c) (if b then true else b))) (false a)))
(if (if (if (if c then false else (b c)) then (if c then c else (\ a : Bool . true)) else (if (if c then b else a) then (a true) else (\ e : Bool . a))) then (if (false b) then (if (b c) then true else (if b then b else a)) else (if true then true else b)) else (\ c : (Bool -> Bool) . c)) then (\ e : (Bool -> (Bool -> Bool)) . (if c then (a a) else (if true then c else b))) else ((\ d : Bool . true) (\ a : Bool . false)))
(\ e : ((Bool -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . ((a false) (a (true c))))
(((\ a : Bool . a) (c (\ d : Bool . a))) (\ d : (Bool -> Bool) . ((\ d : Bool . b) b)))
(((b false) (if (\ a : Bool . b) then (c b) else c)) (\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (if c then (\ e : Bool . false) else b)))
(\ b : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (\ a : Bool . c)))
(((if (if true then c else b) then false else a) (if a then false else c)) (if (if (\ c : Bool . c) then (\ c : Bool . false) else (\ b : Bool . true)) then (if (true c) then (if c then b else a) else (\ d : Bool . c)) else (\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (b (false false)))))
(if (\ a : ((Bool -> Bool) -> Bool) . ((\ d : Bool . false) (if c then a else b))) then (\ c : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . (if ((true false) (\ c : Bool . false)) then (\ d : Bool . false) else (a (true b)))) else ((if (\ b : Bool . true) then (c c) else (\ e : Bool . c)) (\ b : Bool . c)))
((\ a : ((Bool -> Bool) -> (Bool -> Bool)) . ((\ d : Bool . b) c)) (\ a : (Bool -> Bool) . (\ b : (Bool -> Bool) . (\ e : Bool . false))))
((\ a : ((Bool -> Bool) -> Bool) . ((b a) c)) (if (\ e : (Bool -> Bool) . ((\ e : Bool . false) (\ d : Bool . a))) then (if (c c) then (\ d : Bool . false) else (if b then c else a)) else (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (if a then false else true))))
(((\ c : (Bool -> Bool) . (\ a : Bool . c)) (if (\ c : Bool . b) then (\ b : Bool . a) else (\ e : Bool . a))) (if (\ a : (Bool -> Bool) . (if b then false else false)) then (if (if (if false then c else false) then c else c) then (b (\ a : Bool . a)) else ((if true then c else a) a)) else (\ e : (Bool -> Bool) . c)))
(\ e : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . (\ e : ((Bool -> Bool) -> (Bool -> Bool)) . ((\ a : Bool . c) (\ c : Bool . a))))
(if (\ a : (Bool -> Bool) . (\ c : (Bool -> Bool) . (\ a : (Bool -> Bool) . c))) then (\ e : (Bool -> Bool) . ((\ d : Bool . false) (if c then a else a))) else ((false (a true)) (if (true (a false)) then (\ d : Bool . false) else (true (\ d : Bool . false)))))
(((if (\ a : Bool . c) then (\ a : Bool . b) else (\ d : Bool . false)) (\ b : Bool . false)) (\ e : ((Bool -> Bool) -> (Bool -> (Bool -> Bool))) . (\ b : (Bool -> Bool) . c)))
((\ c : (((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if (if (if a then c else false) then true else a) then (\ e : Bool . b) else (if false then c else false))) (\ c : (Bool -> Bool) . (\ d : (Bool -> Bool) . b)))
(((\ a : (Bool -> Bool) . (\ a : Bool . c)) (\ a : ((Bool -> Bool) -> Bool) . (\ c : Bool . b))) ((if (if b then true else c) then (if c then false else true) else b) (\ d : (Bool -> Bool) . false)))
(\ a : (((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . ((\ d : Bool . c) (\ a : Bool . (b a))))
(\ b : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . ((\ b : Bool . (\ e : Bool . true)) (\ d : Bool . true)))
(\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (\ a : (Bool -> Bool) . ((true b) (if a then true else false))))
(\ e : (((Bool -> Bool) -> (Bool -> (Bool -> Bool))) -> ((Bool -> Bool) -> Bool)) . (\ b : (Bool -> Bool) . (b a)))
(if (((\ c : (Bool -> Bool) . (if b then a else c)) (\ d : Bool . false)) ((\ d : Bool . (b true)) (\ c : Bool . true))) then (if ((\ e : Bool . false) (c b)) then (if (\ d : Bool . true) then (c c) else (b c)) else (\ c : (Bool -> Bool) . (a false))) else (\ d : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . (if b then c else a)))
(\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> Bool)) . (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (\ b : (Bool -> Bool) . (if true then c else b))))
(\ c : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . (if (true false) then (if (if a then true else false) then (\ c : Bool . c) else (\ d : Bool . b)) else (\ c : Bool . true)))
(((if c then false else (b a)) (\ e : Bool . b)) ((false (\ b : Bool . c)) (\ a : (Bool -> Bool) . (\ b : Bool . false))))
(if (\ e : (Bool -> (Bool -> Bool)) . (if false then b else true)) then (if (b true) then (\ a : (Bool -> Bool) . (if false then b else true)) else (\ b : (Bool -> Bool) . (if true then c else true))) else (if (if (if true then true else b) then (if true then c else b) else (if (if true then c else false) then a else a)) then (if (\ a : (Bool -> Bool) . (b c)) then (\ d : Bool . b) else (if true then true else (if a then true else a))) else (((if a then false else false) true) (\ c : Bool . false))))
(\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (\ c : (Bool -> Bool) . (\ e : (Bool -> Bool) . (b b))))
((if (if a then c else c) then (if true then a else a) else (true a)) (\ d : (Bool -> Bool) . ((\ a : Bool . b) a)))
(if (\ d : (Bool -> Bool) . (if (a c) then (\ b : Bool . true) else (c c))) then (\ e : (Bool -> Bool) . ((\ e : Bool . b) (false true))) else (if (\ c : (Bool -> Bool) . (false true)) then (\ b : (Bool -> Bool) . (if a then c else a)) else (\ b : (Bool -> Bool) . (a (if true then c else false)))))
((if (if (\ c : (Bool -> Bool) . (\ d : Bool . c)) then (\ d : Bool . b) else (c false)) then (if (\ d : Bool . false) then (\ a : Bool . (\ e : Bool . true)) else (if a then (\ a : Bool . true) else b)) else (if (\ a : Bool . (\ c : Bool . c)) then (if a then false else b) else (\ b : (Bool -> Bool) . (\ a : Bool . a)))) ((\ c : (Bool -> Bool) . (\ d : Bool . c)) (if ((a a) (if false then c else c)) then (\ d : Bool . b) else (\ a : Bool . true))))
(\ b : (((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ b : (Bool -> Bool) . (\ d : Bool . c)))
(if (\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (if false then c else (if b then c else true))) then (((b false) (\ d : Bool . a)) (\ e : ((Bool -> Bool) -> Bool) . (if (b false) then (\ e : Bool . b) else (\ e : Bool . b)))) else (\ d : ((Bool -> Bool) -> (Bool -> (Bool -> Bool))) . (if (\ a : Bool . b) then true else a)))
(\ b : ((Bool -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ a : ((Bool -> Bool) -> Bool) . (if false then true else (\ b : Bool . c))))
(if ((\ d : Bool . true) (\ a : (Bool -> Bool) . (\ a : Bool . false))) then (if (if (true a) then (if a then c else c) else (if c then a else c)) then ((false b) (true true)) else (\ a : (Bool -> Bool) . (\ e : Bool . a))) else (\ e : (Bool -> Bool) . (\ b : Bool . (\ e : Bool . c))))
((\ c : (Bool -> Bool) . (if a then false else c)) (if (\ c : (Bool -> Bool) . ((\ b : Bool . false) true)) then (a a) else ((if (if c then a else false) then (\ e : Bool . b) else (false true)) (false c))))
(\ d : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if (\ e : Bool . (\ e : Bool . true)) then (if false then (\ a : Bool . true) else (b c)) else ((\ d : Bool . a) (\ e : Bool . true))))
((if ((if b then c else false) (if a then false else b)) then (b a) else (\ c : (Bool -> Bool) . a)) ((true (if false then c else c)) (a false)))
(\ a : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . ((\ e : Bool . true) ((false a) (if a then a else false)))))
((\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (\ b : Bool . (b a))) (if (\ a : Bool . true) then (if (a c) then (\ c : Bool . b) else b) else (a true)))
(\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . ((if ((\ c : Bool . b) a) then (\ a : (Bool -> Bool) . b) else (false (\ c : Bool . false))) (\ d : Bool . c)))
(\ c : (((Bool -> Bool) -> Bool) -> (((Bool -> Bool) -> Bool) -> (Bool -> (Bool -> Bool)))) . ((\ c : (Bool -> Bool) . (b true)) (\ c : Bool . false)))
(if (if (if (if false then false else false) then b else (\ a : Bool . b)) then (if true then true else false) else (\ a : Bool . c)) then (\ b : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . ((true true) (if (if false then false else a) then a else false))) else (((if a then a else false) c) (true c)))
((\ a : ((Bool -> Bool) -> Bool) . (b true)) (\ b : (Bool -> Bool) . ((\ b : Bool . b) (true c))))
((if (\ b : Bool . b) then (\ b : Bool . c) else (b b)) (if (true a) then (\ a : Bool . a) else (false a)))
(\ b : (((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) -> (Bool -> Bool)) . (\ d : (Bool -> Bool) . (if c then b else b)))
((\ a : ((Bool -> Bool) -> (Bool -> Bool)) . ((c true) (if b then b else c))) (\ b : (Bool -> (Bool -> Bool)) . (if (if a then c else c) then (if c then (\ a : Bool . true) else false) else (a false))))
(if (\ c : ((Bool -> Bool) -> Bool) . (\ d : Bool . true)) then (\ e : (Bool -> (Bool -> Bool)) . (b (a false))) else (((if b then b else b) true) ((\ a : Bool . false) true)))
(\ e : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . (\ b : (Bool -> Bool) . (if (if false then true else c) then c else (c false))))
(if (if ((\ d : (Bool -> Bool) . b) (c (if a then true else b))) then ((\ b : Bool . a) (if a then b else b)) else (if (a b) then (true true) else (true false))) then (\ c : ((Bool -> Bool) -> (Bool -> Bool)) . ((\ b : Bool . false) (if (true true) then false else a))) else (if (if b then c else c) then (\ a : Bool . a) else (if false then (true true) else b)))
(\ c : ((Bool -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (((\ a : Bool . b) c) (if a then (false false) else (c a))))
(\ b : ((Bool -> (Bool -> Bool)) -> (Bool -> (Bool -> Bool))) . ((if true then (if false then a else false) else a) (true b)))
(\ d : (((Bool -> Bool) -> (Bool -> (Bool -> Bool))) -> (((Bool -> Bool) -> Bool) -> (Bool -> Bool))) . (if (a (false c)) then (if ((\ c : Bool . b) (\ b : Bool . b)) then ((\ d : Bool . b) b) else (if a then (if a then c else b) else true)) else (\ e : Bool . true)))
((if (if (if false then a else false) then (false true) else ((\ a : Bool . c) (a false))) then (if (if false then true else (b a)) then (\ e : Bool . a) else (if c then a else true)) else (if (\ a : Bool . c) then (\ d : Bool . false) else (if (true false) then (a c) else b))) (\ c : (Bool -> (Bool -> Bool)) . (\ c : Bool . a)))
((\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (if (a c) then (if c then false else b) else (\ e : Bool . c))) ((\ b : (Bool -> Bool) . (c b)) (if true then (if true then true else true) else b)))
(((\ c : Bool . a) (\ e : Bool . c)) (if (\ a : Bool . a) then ((a true) false) else (\ b : Bool . b)))
(if (if (\ e : Bool . (a b)) then (\ d : (Bool -> Bool) . (true c)) else ((\ e : Bool . a) (\ d : Bool . b))) then (\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (if c then (if true then true else a) else b)) else ((if false then (\ d : Bool . c) else (\ b : Bool . true)) (if ((a b) c) then (\ b : Bool . (\ d : Bool . a)) else (\ c : Bool . b))))
(\ d : (((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> (Bool -> (Bool -> Bool)))) . (if (true (a b)) then ((if c then c else c) (if c then true else b)) else (\ c : (Bool -> (Bool -> Bool)) . (false true))))
((\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (if (a false) then (if false then true else false) else (if false then b else b))) ((b b) (a a)))
(\ a : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool)))) . (if (if (\ e : Bool . true) then (b c) else (b true)) then (if (b a) then (a true) else c) else (\ b : Bool . c)))
(((if false then true else false) ((false b) (a (\ e : Bool . c)))) (if (if true then (if c then false else true) else (c b)) then (\ a : Bool . a) else (\ b : (Bool -> Bool) . (if b then b else b))))
(if ((\ e : Bool . false) ((\ b : Bool . false) false)) then (\ c : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . (if (c a) then (if (if false then a else a) then b else (if false then true else c)) else (if b then (if b then a else b) else (true b)))) else (if (\ c : (Bool -> Bool) . (a c)) then (if a then c else (a true)) else ((\ e : Bool . (if true then c else a)) (\ d : Bool . a))))
(((if false then (\ d : Bool . b) else (b b)) (\ e : Bool . (if a then b else false))) (if (a c) then (c false) else (\ a : Bool . c)))
((\ a : (Bool -> Bool) . (b c)) ((true true) (\ c : (Bool -> Bool) . (if c then false else a))))
(\ e : (((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) -> ((Bool -> Bool) -> Bool)) . (if (if c then false else b) then (c false) else (a c)))
(\ a : ((Bool -> Bool) -> (Bool -> Bool)) . ((if (if a then c else false) then (false c) else (if false then false else false)) (\ c : Bool . b)))
((\ e : (Bool -> (Bool -> Bool)) . (\ a : Bool . c)) (\ c : (Bool -> Bool) . (if (if true then false else b) then c else (if a then c else false))))
(if (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (false (if b then true else b))) then (((a false) (if false then (if false then a else false) else a)) (if b then c else (if false then false else b))) else (if (if (\ b : (Bool -> Bool) . a) then (\ c : Bool . b) else (false b)) then ((\ e : Bool . true) (true a)) else ((if b then b else false) (b false))))
(\ a : ((((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) -> ((Bool -> Bool) -> Bool)) . (\ b : (Bool -> Bool) . (if b then false else b)))
(if (if (\ b : (Bool -> (Bool -> Bool)) . (true b)) then (if (if (\ b : Bool . a) then true else c) then (if (\ e : Bool . a) then c else true) else (\ d : Bool . a)) else (false false)) then ((\ e : (Bool -> Bool) . (if a then b else c)) (\ c : Bool . a)) else (\ a : (Bool -> Bool) . (b true)))
(\ e : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . (if (if b then a else b) then (if a then a else true) else (true false)))
(\ c : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . ((\ d : (Bool -> Bool) . (\ d : Bool . b)) (\ e : (Bool -> Bool) . (c true))))
(if (\ c : (Bool -> Bool) . (\ d : Bool . c)) then (if (if (true true) then c else (\ b : Bool . false)) then (if (if false then a else a) then b else (c a)) else (if c then (\ b : Bool . true) else (if a then b else a))) else (((true false) (\ b : Bool . b)) ((if true then a else c) b)))
